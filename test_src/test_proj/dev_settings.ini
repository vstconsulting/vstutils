[main]
auth-plugins = LDAP,vstutils.auth.LdapBackend,DJANGO
auth-cache-user = true
enable_registration = true
log_level = debug
debug = true
enable_custom_translations = true

[web]
cors_allow_methods = GET,POST,PATCH,PUT,DELETE,OPTIONS,HEAD
cors_allow_headers = accept,accept-encoding,authorization,content-type,dnt,origin,user-agent,x-csrftoken,x-requested-with,vary

[databases]
default_db = primary1

[databases.primary1.options]

[databases.replica1.options]
timeout = 10

[databases.replica2.options]
timeout = 20

[databases.replica3.options]
timeout = 30

[database.options]

[database]

[cache]
backend = django_redis.cache.RedisCache
location = redis://127.0.0.1:/0

[cache.options]
client_class = django_redis.client.SentinelClient
connection_pool_class = redis.sentinel.SentinelConnectionPool

[cache.options.sentinels]
sentinel-1 = 26379
sentinel-2 = 26379
sentinel-3 = 26379

[session]
backend = django_redis.cache.RedisCache
location = redis://127.0.0.1:/1

[locks]
backend = django.core.cache.backends.filebased.FileBasedCache

[locks.options]
max_entries = 1000

[etag]
backend = django.core.cache.backends.memcached.PyLibMCCache
location = 127.0.0.1:11211

[etag.options]
username = user

[etag.options.behaviors]
ketama = true

[rpc.broker_transport_options]
polling_interval = 0.1

[worker]
logfile = /var/log/test_proj2/{__section}.log

[mail]
authenticate_after_registration = True
send_confirmation = True

[storages.libcloud.aws]
type = libcloud.storage.types.Provider.S3_US_STANDARD_HOST
user = <your username here>
key = <your key here>
bucket = bucket-1

[storages.boto3]
access_key_id = boto3_user
secret_access_key = boto3_key
storage_bucket_name = bucket-1
gzip_content_types = text/css,text/javascript
s3_max_memory_size= 123
querystring_auth = True
s3_verify = false
