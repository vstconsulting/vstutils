# -*- coding: utf-8 -*-
#
# Configuration file for the Sphinx documentation builder.
#
# This file does only contain a selection of the most common options. For a
# full list see the documentation:
# http://www.sphinx-doc.org/en/master/config

# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#
# import sys
# sys.path.insert(0, os.path.abspath('.'))
from __future__ import unicode_literals
import os
import sys
import datetime
from django import setup
sys.path.insert(0, os.path.abspath('../'))
import vstutils
import django
from vstutils.environment import prepare_environment


prepare_environment()
setup()

# -- Project information -----------------------------------------------------

project = 'VST Utils'
copyright = '2018-{}, VST Consulting'.format(datetime.datetime.now().year)
author = 'VST Consulting'

# The short X.Y version
version = vstutils.__version__
# The full version, including alpha/beta/rc tags
release = version


# -- General configuration ---------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#
# needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx_rtd_theme',
    'sphinx.ext.todo',
    'sphinx.ext.coverage',
    'sphinx.ext.viewcode',
    'sphinx.ext.autodoc',
    'sphinx_autodoc_typehints',
    'sphinxcontrib.mermaid',
    'sphinxcontrib.httpdomain',
    'vstutils.api.doc_generator',
    'sphinx.ext.intersphinx',
    'sphinx.ext.extlinks',
]

# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
#
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The master toctree document.
master_doc = 'index'

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'en'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path .
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
#
html_theme_path = ['.', vstutils.__path__[0] + '/doc_themes']
html_theme = 'vst-sphinx-theme'
html_theme_options = {
    'github_user': 'vstconsulting',
    'github_repo': 'vstutils',
    'style_nav_header_background': '#003658',
    'logo_only': True
}
html_logo = 'img/html_logo.png'
html_context = {}

if 'READTHEDOCS' in os.environ:
    html_context['READTHEDOCS'] = os.environ['READTHEDOCS']
# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#
# html_theme_options = {}

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = [vstutils.__path__[0]+'/static']

# Custom sidebar templates, must be a dictionary that maps document names
# to template names.
#
# The default sidebars (for documents that don't match any pattern) are
# defined by theme itself.  Builtin themes are using these templates by
# default: ``['localtoc.html', 'relations.html', 'sourcelink.html',
# 'searchbox.html']``.
#
# html_sidebars = {}


# -- Options for HTMLHelp output ---------------------------------------------

# Output file base name for HTML help builder.
htmlhelp_basename = 'VSTUtilsdoc'


# -- Options for LaTeX output ------------------------------------------------
latex_logo = 'img/latex_logo.png'
latex_show_urls = 'footnote'
latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',

    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',

    # Additional stuff for the LaTeX preamble.
    #
    'preamble': r'''
\let\ORIincludegraphics\includegraphics
\renewcommand{\includegraphics}[2][]{\ORIincludegraphics[scale=0.75,#1]{#2}}
    ''',
    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
    'fncychap': '\\usepackage[Bjornstrup]{fncychap}',
    # 'maketitle': '',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (
        master_doc,
        'VSTUtils.tex',
        'Developer documentation',
        author,
        'manual'
    ),
]
latex_engine = 'xelatex'

# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'vstutils', 'Vst Utils Documentation',
     [author], 1)
]


# -- Options for Texinfo output ----------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
    (master_doc, 'VSTUtils', 'VST Utils Documentation',
     author, 'VSTUtils', 'One line description of project.',
     'Miscellaneous'),
]


# -- Options for Epub output -------------------------------------------------

# Bibliographic Dublin Core info.
epub_title = project
epub_author = author
epub_publisher = author
epub_copyright = copyright

# The unique identifier of the text. This can be a ISBN number
# or the project homepage.
#
# epub_identifier = ''

# A unique identification for the text.
#
# epub_uid = ''

# A list of files that should not be packed into the epub file.
epub_exclude_files = ['search.html']


# -- Extension configuration -------------------------------------------------

# -- Options for todo extension ----------------------------------------------

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = False

viewcode_enable_epub = True

_mermaid_cmd = os.path.expanduser('~/node_modules/.bin/mmdc')
if os.path.exists(_mermaid_cmd):
    mermaid_cmd = _mermaid_cmd
    mermaid_pdfcrop = 'pdfcrop'
    mermaid_output_format = 'png'

autodoc_mock_imports = ["vstutils.tools", "vstutils.wapp"]

django_version = '.'.join((str(django.VERSION[0]), str(django.VERSION[1])))
django_version_docs = 'https://docs.djangoproject.com/en/{version}/'.format(version=django_version)

intersphinx_mapping = {
    'django': (django_version_docs, django_version_docs + '_objects/'),
    'python': ('https://docs.python.org/3.6', None),
}
extlinks = {
    'wiki': ('https://en.wikipedia.org/wiki/%s', None),
    'django_docs': (django_version_docs + 'ref/%s', None),
    'django_topics': (django_version_docs + 'topics/%s', None),
    'celery_docs': ('http://docs.celeryproject.org/en/latest/%s', None),
}


set_type_checking_flag = True
typehints_fully_qualified = True
always_document_param_types = True
autodoc_inherit_docstrings = False
