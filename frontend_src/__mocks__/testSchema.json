{
    "swagger": "2.0",
    "info": {
        "title": "QuickStart",
        "termsOfService": "",
        "contact": { "name": "System Administrator" },
        "x-docs": { "has_docs": false, "docs_url": "/docs/" },
        "x-links": {
            "vstutils": {
                "url": "https://github.com/vstconsulting/vstutils.git",
                "name": "VST Utils sources"
            }
        },
        "x-menu": [
            { "name": "Authors", "url": "/author", "span_class": "fa fa-cog" },
            { "name": "Categories", "url": "/category", "span_class": "fa fa-cog" },
            { "name": "Posts", "url": "/post", "span_class": "fa fa-cog" },
            { "name": "Post Types", "url": "/post_types", "span_class": "fa fa-cog" },
            { "name": "Predefined Attributes", "url": "/predefined_attribute", "span_class": "fa fa-cog" },
            { "name": "All Fields", "url": "/all_fields", "span_class": "fa fa-cog" },
            {
                "name": "System",
                "span_class": "fa fa-cog",
                "sublinks": [{ "name": "Users", "url": "/user", "span_class": "fa fa-user" }]
            }
        ],
        "x-settings": { "static_path": "/static/", "enable_gravatar": true, "time_zone": "UTC" },
        "x-versions": { "application": "1.0.0", "library": "1.0.0", "vstutils": "4.3.1", "django": "2.2.18" },
        "version": "v1",
        "x-user-id": 1
    },
    "host": "0.0.0.0:8080",
    "schemes": ["http"],
    "basePath": "/api/v1",
    "consumes": ["application/json"],
    "produces": ["application/json", "multipart/form-data; boundary=BoUnDaRyStRiNg"],
    "securityDefinitions": { "basic": { "type": "basic" } },
    "security": [{ "basic": [] }],
    "paths": {
        "/all_fields/": {
            "get": {
                "operationId": "all_fields_list",
                "description": "AllFields(id, hidden, autocomplete_model, autocomplete_enum, binfile, boolean, choices, color, crontab, date, date_time, decimal, dynamic_fk, dynamic, email, file, fk, float, html, integer, json, multiplenamedbinfile, multiplenamedbinimage, multiplenamedbinimage_validation, multiselect_model, namedbinfile, namedbinimage, namedbinimage_validation, rating_stars, rating_slider, rating_icon, password, secretfile, textarea, uptime)",
                "parameters": [
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": ["count", "results"],
                            "type": "object",
                            "properties": {
                                "count": { "type": "integer" },
                                "next": { "type": "string", "format": "uri", "x-nullable": true },
                                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                                "results": { "type": "array", "items": { "$ref": "#/definitions/AllFields" } }
                            }
                        }
                    }
                },
                "tags": ["all_fields"],
                "x-subscribe-labels": ["quick.AllFields"]
            },
            "post": {
                "operationId": "all_fields_add",
                "description": "AllFields(id, hidden, autocomplete_model, autocomplete_enum, binfile, boolean, choices, color, crontab, date, date_time, decimal, dynamic_fk, dynamic, email, file, fk, float, html, integer, json, multiplenamedbinfile, multiplenamedbinimage, multiplenamedbinimage_validation, multiselect_model, namedbinfile, namedbinimage, namedbinimage_validation, rating_stars, rating_slider, rating_icon, password, secretfile, textarea, uptime)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OneAllFields" }
                    }
                ],
                "responses": {
                    "201": { "description": "CREATED", "schema": { "$ref": "#/definitions/OneAllFields" } }
                },
                "tags": ["all_fields"]
            },
            "parameters": []
        },
        "/all_fields/{id}/": {
            "get": {
                "operationId": "all_fields_get",
                "description": "AllFields(id, hidden, autocomplete_model, autocomplete_enum, binfile, boolean, choices, color, crontab, date, date_time, decimal, dynamic_fk, dynamic, email, file, fk, float, html, integer, json, multiplenamedbinfile, multiplenamedbinimage, multiplenamedbinimage_validation, multiselect_model, namedbinfile, namedbinimage, namedbinimage_validation, rating_stars, rating_slider, rating_icon, password, secretfile, textarea, uptime)",
                "parameters": [],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OneAllFields" } }
                },
                "tags": ["all_fields"],
                "x-subscribe-labels": ["quick.AllFields"]
            },
            "put": {
                "operationId": "all_fields_update",
                "description": "AllFields(id, hidden, autocomplete_model, autocomplete_enum, binfile, boolean, choices, color, crontab, date, date_time, decimal, dynamic_fk, dynamic, email, file, fk, float, html, integer, json, multiplenamedbinfile, multiplenamedbinimage, multiplenamedbinimage_validation, multiselect_model, namedbinfile, namedbinimage, namedbinimage_validation, rating_stars, rating_slider, rating_icon, password, secretfile, textarea, uptime)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OneAllFields" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OneAllFields" } }
                },
                "tags": ["all_fields"]
            },
            "patch": {
                "operationId": "all_fields_edit",
                "description": "AllFields(id, hidden, autocomplete_model, autocomplete_enum, binfile, boolean, choices, color, crontab, date, date_time, decimal, dynamic_fk, dynamic, email, file, fk, float, html, integer, json, multiplenamedbinfile, multiplenamedbinimage, multiplenamedbinimage_validation, multiselect_model, namedbinfile, namedbinimage, namedbinimage_validation, rating_stars, rating_slider, rating_icon, password, secretfile, textarea, uptime)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OneAllFields" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OneAllFields" } }
                },
                "tags": ["all_fields"]
            },
            "delete": {
                "operationId": "all_fields_remove",
                "description": "AllFields(id, hidden, autocomplete_model, autocomplete_enum, binfile, boolean, choices, color, crontab, date, date_time, decimal, dynamic_fk, dynamic, email, file, fk, float, html, integer, json, multiplenamedbinfile, multiplenamedbinimage, multiplenamedbinimage_validation, multiselect_model, namedbinfile, namedbinimage, namedbinimage_validation, rating_stars, rating_slider, rating_icon, password, secretfile, textarea, uptime)",
                "parameters": [],
                "responses": { "204": { "description": "NO CONTENT" } },
                "tags": ["all_fields"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this all fields.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/author/": {
            "get": {
                "operationId": "author_list",
                "description": "Author(id, hidden, name, registerDate)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__not",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": ["count", "results"],
                            "type": "object",
                            "properties": {
                                "count": { "type": "integer" },
                                "next": { "type": "string", "format": "uri", "x-nullable": true },
                                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                                "results": { "type": "array", "items": { "$ref": "#/definitions/Author" } }
                            }
                        }
                    }
                },
                "tags": ["author"],
                "x-subscribe-labels": ["quick.Author"]
            },
            "post": {
                "operationId": "author_add",
                "description": "Author(id, hidden, name, registerDate)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OneAuthor" }
                    }
                ],
                "responses": {
                    "201": { "description": "CREATED", "schema": { "$ref": "#/definitions/OneAuthor" } }
                },
                "tags": ["author"]
            },
            "parameters": []
        },
        "/author/sub_with_post/": {
            "get": {
                "operationId": "author_sub_with_post_get",
                "description": "",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__not",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": ["count", "results"],
                            "type": "object",
                            "properties": {
                                "count": { "type": "integer" },
                                "next": { "type": "string", "format": "uri", "x-nullable": true },
                                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                                "results": { "type": "array", "items": { "$ref": "#/definitions/SubView" } }
                            }
                        }
                    }
                },
                "tags": ["author"],
                "x-subscribe-labels": ["quick.Author"]
            },
            "post": {
                "operationId": "author_sub_with_post_add",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/SubView" }
                    }
                ],
                "responses": {
                    "201": { "description": "CREATED", "schema": { "$ref": "#/definitions/SubView" } }
                },
                "tags": ["author"]
            },
            "delete": {
                "operationId": "author_sub_with_post_remove",
                "description": "",
                "parameters": [],
                "responses": { "204": { "description": "NO CONTENT" } },
                "tags": ["author"]
            },
            "parameters": []
        },
        "/author/{id}/": {
            "get": {
                "operationId": "author_get",
                "description": "Author(id, hidden, name, registerDate)",
                "parameters": [],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OneAuthor" } }
                },
                "tags": ["author"],
                "x-subscribe-labels": ["quick.Author"]
            },
            "put": {
                "operationId": "author_update",
                "description": "Author(id, hidden, name, registerDate)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OneAuthor" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OneAuthor" } }
                },
                "tags": ["author"]
            },
            "patch": {
                "operationId": "author_edit",
                "description": "Author(id, hidden, name, registerDate)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OneAuthor" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OneAuthor" } }
                },
                "tags": ["author"]
            },
            "delete": {
                "operationId": "author_remove",
                "description": "Author(id, hidden, name, registerDate)",
                "parameters": [],
                "responses": { "204": { "description": "NO CONTENT" } },
                "tags": ["author"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/author/{id}/post/": {
            "get": {
                "operationId": "author_post_list",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "author",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": ["count", "results"],
                            "type": "object",
                            "properties": {
                                "count": { "type": "integer" },
                                "next": { "type": "string", "format": "uri", "x-nullable": true },
                                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                                "results": { "type": "array", "items": { "$ref": "#/definitions/Post" } }
                            }
                        }
                    }
                },
                "tags": ["author"],
                "x-subscribe-labels": ["quick.Post"]
            },
            "post": {
                "operationId": "author_post_add",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OnePost" }
                    }
                ],
                "responses": {
                    "201": { "description": "CREATED", "schema": { "$ref": "#/definitions/OnePost" } }
                },
                "tags": ["author"],
                "x-allow-append": true
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/author/{id}/post/archive_all/": {
            "delete": {
                "operationId": "author_post_archive_all",
                "description": "",
                "parameters": [],
                "responses": { "204": { "description": "NO CONTENT" } },
                "tags": ["author"],
                "x-multiaction": false,
                "x-label": "Archive All Posts"
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/author/{id}/post/{post_id}/": {
            "get": {
                "operationId": "author_post_get",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OnePost" } }
                },
                "tags": ["author"],
                "x-subscribe-labels": ["quick.Post"]
            },
            "put": {
                "operationId": "author_post_update",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OnePost" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OnePost" } }
                },
                "tags": ["author"]
            },
            "patch": {
                "operationId": "author_post_edit",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OnePost" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OnePost" } }
                },
                "tags": ["author"]
            },
            "delete": {
                "operationId": "author_post_remove",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [],
                "responses": { "204": { "description": "NO CONTENT" } },
                "tags": ["author"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "post_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this post sublist."
                }
            ],
            "x-edit-style": true
        },
        "/author/{id}/post/{post_id}/archive/": {
            "post": {
                "operationId": "author_post_archive",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/Empty" }
                    }
                ],
                "responses": {
                    "201": { "description": "CREATED", "schema": { "$ref": "#/definitions/Empty" } }
                },
                "tags": ["author"],
                "x-multiaction": false,
                "x-multi-action": true
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "post_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this post sublist."
                }
            ]
        },
        "/author/{id}/post/{post_id}/change_title/": {
            "patch": {
                "operationId": "author_post_change_title",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/ChangeTitle" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/ChangeTitle" } }
                },
                "tags": ["author"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "post_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this post sublist."
                }
            ]
        },
        "/author/{id}/post/{post_id}/meta/": {
            "get": {
                "operationId": "author_post_meta_list",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "string"
                    },
                    { "name": "key", "in": "query", "description": "", "required": false, "type": "string" },
                    {
                        "name": "value",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": ["count", "results"],
                            "type": "object",
                            "properties": {
                                "count": { "type": "integer" },
                                "next": { "type": "string", "format": "uri", "x-nullable": true },
                                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                                "results": { "type": "array", "items": { "$ref": "#/definitions/PostMeta" } }
                            }
                        }
                    }
                },
                "tags": ["author"],
                "x-subscribe-labels": ["quick.PostMeta"]
            },
            "post": {
                "operationId": "author_post_meta_add",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OnePostMeta" }
                    }
                ],
                "responses": {
                    "201": { "description": "CREATED", "schema": { "$ref": "#/definitions/OnePostMeta" } }
                },
                "tags": ["author"],
                "x-allow-append": false
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "post_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this post sublist."
                }
            ]
        },
        "/author/{id}/post/{post_id}/meta/{meta_id}/": {
            "get": {
                "operationId": "author_post_meta_get",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OnePostMeta" } }
                },
                "tags": ["author"],
                "x-subscribe-labels": ["quick.PostMeta"]
            },
            "put": {
                "operationId": "author_post_meta_update",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OnePostMeta" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OnePostMeta" } }
                },
                "tags": ["author"]
            },
            "patch": {
                "operationId": "author_post_meta_edit",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OnePostMeta" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OnePostMeta" } }
                },
                "tags": ["author"]
            },
            "delete": {
                "operationId": "author_post_meta_remove",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [],
                "responses": { "204": { "description": "NO CONTENT" } },
                "tags": ["author"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                },
                { "name": "meta_id", "in": "path", "required": true, "type": "string" },
                {
                    "name": "post_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this post sublist."
                }
            ]
        },
        "/author/{id}/post/{post_id}/sub/": {
            "get": {
                "operationId": "author_post_sub_get",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/SubView" } }
                },
                "tags": ["author"],
                "x-subscribe-labels": ["quick.Post"]
            },
            "put": {
                "operationId": "author_post_sub_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/SubView" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/SubView" } }
                },
                "tags": ["author"]
            },
            "patch": {
                "operationId": "author_post_sub_edit",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/SubView" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/SubView" } }
                },
                "tags": ["author"]
            },
            "delete": {
                "operationId": "author_post_sub_remove",
                "description": "",
                "parameters": [],
                "responses": { "204": { "description": "NO CONTENT" } },
                "tags": ["author"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "post_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this post sublist."
                }
            ]
        },
        "/category/": {
            "get": {
                "operationId": "category_list",
                "description": "Category(id, hidden, name)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__not",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": ["count", "results"],
                            "type": "object",
                            "properties": {
                                "count": { "type": "integer" },
                                "next": { "type": "string", "format": "uri", "x-nullable": true },
                                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                                "results": { "type": "array", "items": { "$ref": "#/definitions/Category" } }
                            }
                        }
                    }
                },
                "tags": ["category"],
                "x-subscribe-labels": ["quick.Category"]
            },
            "post": {
                "operationId": "category_add",
                "description": "Category(id, hidden, name)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OneCategory" }
                    }
                ],
                "responses": {
                    "201": { "description": "CREATED", "schema": { "$ref": "#/definitions/OneCategory" } }
                },
                "tags": ["category"]
            },
            "parameters": []
        },
        "/category/{id}/": {
            "get": {
                "operationId": "category_get",
                "description": "Category(id, hidden, name)",
                "parameters": [],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OneCategory" } }
                },
                "tags": ["category"],
                "x-subscribe-labels": ["quick.Category"]
            },
            "put": {
                "operationId": "category_update",
                "description": "Category(id, hidden, name)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OneCategory" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OneCategory" } }
                },
                "tags": ["category"]
            },
            "patch": {
                "operationId": "category_edit",
                "description": "Category(id, hidden, name)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OneCategory" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OneCategory" } }
                },
                "tags": ["category"]
            },
            "delete": {
                "operationId": "category_remove",
                "description": "Category(id, hidden, name)",
                "parameters": [],
                "responses": { "204": { "description": "NO CONTENT" } },
                "tags": ["category"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/fragment1/fragment2/fragment3/fragment4/author/": {
            "get": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_list",
                "description": "Author(id, hidden, name, registerDate)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__not",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": ["count", "results"],
                            "type": "object",
                            "properties": {
                                "count": { "type": "integer" },
                                "next": { "type": "string", "format": "uri", "x-nullable": true },
                                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                                "results": { "type": "array", "items": { "$ref": "#/definitions/Author" } }
                            }
                        }
                    }
                },
                "tags": ["fragment1"],
                "x-subscribe-labels": ["quick.Author"]
            },
            "post": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_add",
                "description": "Author(id, hidden, name, registerDate)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OneAuthor" }
                    }
                ],
                "responses": {
                    "201": { "description": "CREATED", "schema": { "$ref": "#/definitions/OneAuthor" } }
                },
                "tags": ["fragment1"]
            },
            "parameters": []
        },
        "/fragment1/fragment2/fragment3/fragment4/author/sub_with_post/": {
            "get": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_sub_with_post_get",
                "description": "",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__not",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": ["count", "results"],
                            "type": "object",
                            "properties": {
                                "count": { "type": "integer" },
                                "next": { "type": "string", "format": "uri", "x-nullable": true },
                                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                                "results": { "type": "array", "items": { "$ref": "#/definitions/SubView" } }
                            }
                        }
                    }
                },
                "tags": ["fragment1"],
                "x-subscribe-labels": ["quick.Author"]
            },
            "post": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_sub_with_post_add",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/SubView" }
                    }
                ],
                "responses": {
                    "201": { "description": "CREATED", "schema": { "$ref": "#/definitions/SubView" } }
                },
                "tags": ["fragment1"]
            },
            "delete": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_sub_with_post_remove",
                "description": "",
                "parameters": [],
                "responses": { "204": { "description": "NO CONTENT" } },
                "tags": ["fragment1"]
            },
            "parameters": []
        },
        "/fragment1/fragment2/fragment3/fragment4/author/{id}/": {
            "get": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_get",
                "description": "Author(id, hidden, name, registerDate)",
                "parameters": [],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OneAuthor" } }
                },
                "tags": ["fragment1"],
                "x-subscribe-labels": ["quick.Author"]
            },
            "put": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_update",
                "description": "Author(id, hidden, name, registerDate)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OneAuthor" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OneAuthor" } }
                },
                "tags": ["fragment1"]
            },
            "patch": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_edit",
                "description": "Author(id, hidden, name, registerDate)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OneAuthor" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OneAuthor" } }
                },
                "tags": ["fragment1"]
            },
            "delete": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_remove",
                "description": "Author(id, hidden, name, registerDate)",
                "parameters": [],
                "responses": { "204": { "description": "NO CONTENT" } },
                "tags": ["fragment1"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/fragment1/fragment2/fragment3/fragment4/author/{id}/post/": {
            "get": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_list",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "author",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": ["count", "results"],
                            "type": "object",
                            "properties": {
                                "count": { "type": "integer" },
                                "next": { "type": "string", "format": "uri", "x-nullable": true },
                                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                                "results": { "type": "array", "items": { "$ref": "#/definitions/Post" } }
                            }
                        }
                    }
                },
                "tags": ["fragment1"],
                "x-subscribe-labels": ["quick.Post"]
            },
            "post": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_add",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OnePost" }
                    }
                ],
                "responses": {
                    "201": { "description": "CREATED", "schema": { "$ref": "#/definitions/OnePost" } }
                },
                "tags": ["fragment1"],
                "x-allow-append": true
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/fragment1/fragment2/fragment3/fragment4/author/{id}/post/archive_all/": {
            "delete": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_archive_all",
                "description": "",
                "parameters": [],
                "responses": { "204": { "description": "NO CONTENT" } },
                "tags": ["fragment1"],
                "x-multiaction": false,
                "x-label": "Archive All Posts"
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/fragment1/fragment2/fragment3/fragment4/author/{id}/post/{post_id}/": {
            "get": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_get",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OnePost" } }
                },
                "tags": ["fragment1"],
                "x-subscribe-labels": ["quick.Post"]
            },
            "put": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_update",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OnePost" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OnePost" } }
                },
                "tags": ["fragment1"]
            },
            "patch": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_edit",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OnePost" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OnePost" } }
                },
                "tags": ["fragment1"]
            },
            "delete": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_remove",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [],
                "responses": { "204": { "description": "NO CONTENT" } },
                "tags": ["fragment1"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "post_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this post sublist."
                }
            ],
            "x-edit-style": true
        },
        "/fragment1/fragment2/fragment3/fragment4/author/{id}/post/{post_id}/archive/": {
            "post": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_archive",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/Empty" }
                    }
                ],
                "responses": {
                    "201": { "description": "CREATED", "schema": { "$ref": "#/definitions/Empty" } }
                },
                "tags": ["fragment1"],
                "x-multiaction": false,
                "x-multi-action": true
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "post_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this post sublist."
                }
            ]
        },
        "/fragment1/fragment2/fragment3/fragment4/author/{id}/post/{post_id}/change_title/": {
            "patch": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_change_title",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/ChangeTitle" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/ChangeTitle" } }
                },
                "tags": ["fragment1"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "post_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this post sublist."
                }
            ]
        },
        "/fragment1/fragment2/fragment3/fragment4/author/{id}/post/{post_id}/meta/": {
            "get": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_meta_list",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "string"
                    },
                    { "name": "key", "in": "query", "description": "", "required": false, "type": "string" },
                    {
                        "name": "value",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": ["count", "results"],
                            "type": "object",
                            "properties": {
                                "count": { "type": "integer" },
                                "next": { "type": "string", "format": "uri", "x-nullable": true },
                                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                                "results": { "type": "array", "items": { "$ref": "#/definitions/PostMeta" } }
                            }
                        }
                    }
                },
                "tags": ["fragment1"],
                "x-subscribe-labels": ["quick.PostMeta"]
            },
            "post": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_meta_add",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OnePostMeta" }
                    }
                ],
                "responses": {
                    "201": { "description": "CREATED", "schema": { "$ref": "#/definitions/OnePostMeta" } }
                },
                "tags": ["fragment1"],
                "x-allow-append": false
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "post_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this post sublist."
                }
            ]
        },
        "/fragment1/fragment2/fragment3/fragment4/author/{id}/post/{post_id}/meta/{meta_id}/": {
            "get": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_meta_get",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OnePostMeta" } }
                },
                "tags": ["fragment1"],
                "x-subscribe-labels": ["quick.PostMeta"]
            },
            "put": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_meta_update",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OnePostMeta" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OnePostMeta" } }
                },
                "tags": ["fragment1"]
            },
            "patch": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_meta_edit",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OnePostMeta" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OnePostMeta" } }
                },
                "tags": ["fragment1"]
            },
            "delete": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_meta_remove",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [],
                "responses": { "204": { "description": "NO CONTENT" } },
                "tags": ["fragment1"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                },
                { "name": "meta_id", "in": "path", "required": true, "type": "string" },
                {
                    "name": "post_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this post sublist."
                }
            ]
        },
        "/fragment1/fragment2/fragment3/fragment4/author/{id}/post/{post_id}/sub/": {
            "get": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_sub_get",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/SubView" } }
                },
                "tags": ["fragment1"],
                "x-subscribe-labels": ["quick.Post"]
            },
            "put": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_sub_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/SubView" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/SubView" } }
                },
                "tags": ["fragment1"]
            },
            "patch": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_sub_edit",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/SubView" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/SubView" } }
                },
                "tags": ["fragment1"]
            },
            "delete": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_sub_remove",
                "description": "",
                "parameters": [],
                "responses": { "204": { "description": "NO CONTENT" } },
                "tags": ["fragment1"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "post_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this post sublist."
                }
            ]
        },
        "/post/": {
            "get": {
                "operationId": "post_list",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "author",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": ["count", "results"],
                            "type": "object",
                            "properties": {
                                "count": { "type": "integer" },
                                "next": { "type": "string", "format": "uri", "x-nullable": true },
                                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                                "results": { "type": "array", "items": { "$ref": "#/definitions/Post" } }
                            }
                        }
                    }
                },
                "tags": ["post"],
                "x-subscribe-labels": ["quick.Post"]
            },
            "post": {
                "operationId": "post_add",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OnePost" }
                    }
                ],
                "responses": {
                    "201": { "description": "CREATED", "schema": { "$ref": "#/definitions/OnePost" } }
                },
                "tags": ["post"]
            },
            "parameters": []
        },
        "/post/archive_all/": {
            "delete": {
                "operationId": "post_archive_all",
                "description": "",
                "parameters": [],
                "responses": { "204": { "description": "NO CONTENT" } },
                "tags": ["post"],
                "x-multiaction": false,
                "x-label": "Archive All Posts"
            },
            "parameters": []
        },
        "/post/{id}/": {
            "get": {
                "operationId": "post_get",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OnePost" } }
                },
                "tags": ["post"],
                "x-subscribe-labels": ["quick.Post"]
            },
            "put": {
                "operationId": "post_update",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OnePost" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OnePost" } }
                },
                "tags": ["post"]
            },
            "patch": {
                "operationId": "post_edit",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OnePost" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OnePost" } }
                },
                "tags": ["post"]
            },
            "delete": {
                "operationId": "post_remove",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [],
                "responses": { "204": { "description": "NO CONTENT" } },
                "tags": ["post"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this post.",
                    "required": true,
                    "type": "integer"
                }
            ],
            "x-edit-style": true
        },
        "/post/{id}/archive/": {
            "post": {
                "operationId": "post_archive",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/Empty" }
                    }
                ],
                "responses": {
                    "201": { "description": "CREATED", "schema": { "$ref": "#/definitions/Empty" } }
                },
                "tags": ["post"],
                "x-multiaction": false,
                "x-multi-action": true
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this post.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/post/{id}/change_title/": {
            "patch": {
                "operationId": "post_change_title",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/ChangeTitle" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/ChangeTitle" } }
                },
                "tags": ["post"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this post.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/post/{id}/meta/": {
            "get": {
                "operationId": "post_meta_list",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "string"
                    },
                    { "name": "key", "in": "query", "description": "", "required": false, "type": "string" },
                    {
                        "name": "value",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": ["count", "results"],
                            "type": "object",
                            "properties": {
                                "count": { "type": "integer" },
                                "next": { "type": "string", "format": "uri", "x-nullable": true },
                                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                                "results": { "type": "array", "items": { "$ref": "#/definitions/PostMeta" } }
                            }
                        }
                    }
                },
                "tags": ["post"],
                "x-subscribe-labels": ["quick.PostMeta"]
            },
            "post": {
                "operationId": "post_meta_add",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OnePostMeta" }
                    }
                ],
                "responses": {
                    "201": { "description": "CREATED", "schema": { "$ref": "#/definitions/OnePostMeta" } }
                },
                "tags": ["post"],
                "x-allow-append": false
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this post.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/post/{id}/meta/{meta_id}/": {
            "get": {
                "operationId": "post_meta_get",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OnePostMeta" } }
                },
                "tags": ["post"],
                "x-subscribe-labels": ["quick.PostMeta"]
            },
            "put": {
                "operationId": "post_meta_update",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OnePostMeta" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OnePostMeta" } }
                },
                "tags": ["post"]
            },
            "patch": {
                "operationId": "post_meta_edit",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OnePostMeta" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OnePostMeta" } }
                },
                "tags": ["post"]
            },
            "delete": {
                "operationId": "post_meta_remove",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [],
                "responses": { "204": { "description": "NO CONTENT" } },
                "tags": ["post"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this post.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "meta_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this meta sublist."
                }
            ]
        },
        "/post/{id}/sub/": {
            "get": {
                "operationId": "post_sub_get",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/SubView" } }
                },
                "tags": ["post"],
                "x-subscribe-labels": ["quick.Post"]
            },
            "put": {
                "operationId": "post_sub_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/SubView" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/SubView" } }
                },
                "tags": ["post"]
            },
            "patch": {
                "operationId": "post_sub_edit",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/SubView" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/SubView" } }
                },
                "tags": ["post"]
            },
            "delete": {
                "operationId": "post_sub_remove",
                "description": "",
                "parameters": [],
                "responses": { "204": { "description": "NO CONTENT" } },
                "tags": ["post"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this post.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/post_types/": {
            "get": {
                "operationId": "post_types_list",
                "description": "PredefinedPostType(id, hidden, name)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__not",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": ["count", "results"],
                            "type": "object",
                            "properties": {
                                "count": { "type": "integer" },
                                "next": { "type": "string", "format": "uri", "x-nullable": true },
                                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                                "results": {
                                    "type": "array",
                                    "items": { "$ref": "#/definitions/PredefinedPostType" }
                                }
                            }
                        }
                    }
                },
                "tags": ["post_types"],
                "x-subscribe-labels": ["quick.PredefinedPostType"]
            },
            "post": {
                "operationId": "post_types_add",
                "description": "PredefinedPostType(id, hidden, name)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OnePredefinedPostType" }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": { "$ref": "#/definitions/OnePredefinedPostType" }
                    }
                },
                "tags": ["post_types"]
            },
            "parameters": []
        },
        "/post_types/{id}/": {
            "get": {
                "operationId": "post_types_get",
                "description": "PredefinedPostType(id, hidden, name)",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/OnePredefinedPostType" }
                    }
                },
                "tags": ["post_types"],
                "x-subscribe-labels": ["quick.PredefinedPostType"]
            },
            "put": {
                "operationId": "post_types_update",
                "description": "PredefinedPostType(id, hidden, name)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OnePredefinedPostType" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/OnePredefinedPostType" }
                    }
                },
                "tags": ["post_types"]
            },
            "patch": {
                "operationId": "post_types_edit",
                "description": "PredefinedPostType(id, hidden, name)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OnePredefinedPostType" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/OnePredefinedPostType" }
                    }
                },
                "tags": ["post_types"]
            },
            "delete": {
                "operationId": "post_types_remove",
                "description": "PredefinedPostType(id, hidden, name)",
                "parameters": [],
                "responses": { "204": { "description": "NO CONTENT" } },
                "tags": ["post_types"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this predefined post type.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/predefined_attribute/": {
            "get": {
                "operationId": "predefined_attribute_list",
                "description": "PredefinedAttribute(id, hidden, name, field_type)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "field_type",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "name__not",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": ["count", "results"],
                            "type": "object",
                            "properties": {
                                "count": { "type": "integer" },
                                "next": { "type": "string", "format": "uri", "x-nullable": true },
                                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                                "results": {
                                    "type": "array",
                                    "items": { "$ref": "#/definitions/PredefinedAttribute" }
                                }
                            }
                        }
                    }
                },
                "tags": ["predefined_attribute"],
                "x-subscribe-labels": ["quick.PredefinedAttribute"]
            },
            "post": {
                "operationId": "predefined_attribute_add",
                "description": "PredefinedAttribute(id, hidden, name, field_type)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OnePredefinedAttribute" }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": { "$ref": "#/definitions/OnePredefinedAttribute" }
                    }
                },
                "tags": ["predefined_attribute"]
            },
            "parameters": []
        },
        "/predefined_attribute/{id}/": {
            "get": {
                "operationId": "predefined_attribute_get",
                "description": "PredefinedAttribute(id, hidden, name, field_type)",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/OnePredefinedAttribute" }
                    }
                },
                "tags": ["predefined_attribute"],
                "x-subscribe-labels": ["quick.PredefinedAttribute"]
            },
            "put": {
                "operationId": "predefined_attribute_update",
                "description": "PredefinedAttribute(id, hidden, name, field_type)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OnePredefinedAttribute" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/OnePredefinedAttribute" }
                    }
                },
                "tags": ["predefined_attribute"]
            },
            "patch": {
                "operationId": "predefined_attribute_edit",
                "description": "PredefinedAttribute(id, hidden, name, field_type)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OnePredefinedAttribute" }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": { "$ref": "#/definitions/OnePredefinedAttribute" }
                    }
                },
                "tags": ["predefined_attribute"]
            },
            "delete": {
                "operationId": "predefined_attribute_remove",
                "description": "PredefinedAttribute(id, hidden, name, field_type)",
                "parameters": [],
                "responses": { "204": { "description": "NO CONTENT" } },
                "tags": ["predefined_attribute"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this predefined attribute.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/user/": {
            "get": {
                "operationId": "user_list",
                "description": "API endpoint that allows users to be viewed or edited.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Boolean value meaning status of user.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "first_name",
                        "in": "query",
                        "description": "Users first name.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "description": "Users last name.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Users e-mail value.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "username__not",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": ["count", "results"],
                            "type": "object",
                            "properties": {
                                "count": { "type": "integer" },
                                "next": { "type": "string", "format": "uri", "x-nullable": true },
                                "previous": { "type": "string", "format": "uri", "x-nullable": true },
                                "results": { "type": "array", "items": { "$ref": "#/definitions/User" } }
                            }
                        }
                    }
                },
                "tags": ["user"],
                "x-subscribe-labels": ["auth.User"]
            },
            "post": {
                "operationId": "user_add",
                "description": "API endpoint that allows users to be viewed or edited.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/CreateUser" }
                    }
                ],
                "responses": {
                    "201": { "description": "CREATED", "schema": { "$ref": "#/definitions/CreateUser" } }
                },
                "tags": ["user"]
            },
            "parameters": []
        },
        "/user/{id}/": {
            "get": {
                "operationId": "user_get",
                "description": "API endpoint that allows users to be viewed or edited.",
                "parameters": [],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OneUser" } }
                },
                "tags": ["user"],
                "x-subscribe-labels": ["auth.User"]
            },
            "put": {
                "operationId": "user_update",
                "description": "API endpoint that allows users to be viewed or edited.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OneUser" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OneUser" } }
                },
                "tags": ["user"]
            },
            "patch": {
                "operationId": "user_edit",
                "description": "API endpoint that allows users to be viewed or edited.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/OneUser" }
                    }
                ],
                "responses": {
                    "200": { "description": "OK", "schema": { "$ref": "#/definitions/OneUser" } }
                },
                "tags": ["user"]
            },
            "delete": {
                "operationId": "user_remove",
                "description": "API endpoint that allows users to be viewed or edited.",
                "parameters": [],
                "responses": { "204": { "description": "NO CONTENT" } },
                "tags": ["user"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this user.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/user/{id}/change_password/": {
            "post": {
                "operationId": "user_change_password",
                "description": "API endpoint that allows users to be viewed or edited.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": { "$ref": "#/definitions/ChangePassword" }
                    }
                ],
                "responses": {
                    "201": { "description": "CREATED", "schema": { "$ref": "#/definitions/ChangePassword" } }
                },
                "tags": ["user"]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this user.",
                    "required": true,
                    "type": "integer"
                }
            ]
        }
    },
    "definitions": {
        "AllFields": {
            "required": [
                "autocomplete_model",
                "autocomplete_enum",
                "binfile",
                "dynamic_fk",
                "dynamic",
                "file",
                "fk",
                "html",
                "multiselect_model",
                "namedbinfile",
                "namedbinimage",
                "namedbinimage_validation",
                "rating_stars",
                "rating_slider",
                "rating_icon",
                "secretfile",
                "uptime"
            ],
            "type": "object",
            "properties": {
                "id": { "title": "Id", "type": "integer", "readOnly": true },
                "autocomplete_model": {
                    "title": "Autocomplete model",
                    "type": "string",
                    "format": "fk_autocomplete",
                    "additionalProperties": {
                        "model": { "$ref": "#/definitions/Author" },
                        "value_field": "name",
                        "view_field": "name"
                    },
                    "x-nullable": true
                },
                "autocomplete_enum": {
                    "title": "Autocomplete enum",
                    "type": "string",
                    "format": "autocomplete",
                    "enum": ["Author 1", "Author 2"],
                    "x-nullable": true
                },
                "binfile": { "title": "Binfile", "type": "string", "format": "binfile", "x-nullable": true },
                "boolean": { "title": "Boolean", "type": "boolean" },
                "choices": {
                    "title": "Choices",
                    "type": "string",
                    "enum": ["integer", "boolean"],
                    "x-nullable": true
                },
                "color": {
                    "title": "Color",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 1,
                    "x-nullable": true,
                    "format": "color"
                },
                "crontab": {
                    "title": "Crontab",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1,
                    "x-nullable": true,
                    "format": "crontab"
                },
                "date": { "title": "Date", "type": "string", "format": "date", "x-nullable": true },
                "date_time": {
                    "title": "Date time",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "decimal": { "title": "Decimal", "type": "string", "format": "decimal" },
                "dynamic_fk": {
                    "title": "Dynamic fk",
                    "type": "string",
                    "format": "dynamic_fk",
                    "additionalProperties": { "field": "fk", "field_attribute": "field_type" }
                },
                "dynamic": {
                    "title": "Dynamic",
                    "type": "string",
                    "format": "dynamic",
                    "additionalProperties": {
                        "field": "choices",
                        "choices": {},
                        "types": { "integer": "integer", "boolean": "boolean" }
                    },
                    "x-nullable": true
                },
                "email": {
                    "title": "Email",
                    "type": "string",
                    "format": "email",
                    "maxLength": 254,
                    "x-nullable": true
                },
                "file": { "title": "File", "type": "string", "format": "file", "x-nullable": true },
                "fk": {
                    "title": "Fk",
                    "type": "integer",
                    "format": "fk",
                    "additionalProperties": {
                        "model": { "$ref": "#/definitions/PredefinedAttribute" },
                        "value_field": "id",
                        "view_field": "name",
                        "usePrefetch": true,
                        "makeLink": true,
                        "dependence": null
                    },
                    "x-nullable": true
                },
                "float": { "title": "Float", "type": "number", "x-nullable": true },
                "html": { "title": "Html", "type": "string", "format": "html" },
                "integer": { "title": "Integer", "type": "integer", "x-nullable": true },
                "json": { "title": "Json", "type": "string", "format": "json", "default": "{}" },
                "multiplenamedbinfile": {
                    "title": "Multiplenamedbinfile",
                    "type": "string",
                    "format": "multiplenamedbinfile"
                },
                "multiplenamedbinimage": {
                    "title": "Multiplenamedbinimage",
                    "type": "string",
                    "format": "multiplenamedbinimage",
                    "additionalProperties": {}
                },
                "multiplenamedbinimage_validation": {
                    "title": "Multiplenamedbinimage validation",
                    "type": "string",
                    "format": "multiplenamedbinimage",
                    "additionalProperties": {
                        "min_width": 400,
                        "max_width": 800,
                        "min_height": 200,
                        "max_height": 400,
                        "extensions": ["bmp", "jpeg", "jpg", "png"]
                    }
                },
                "multiselect_model": {
                    "title": "Multiselect model",
                    "type": "string",
                    "format": "multiselect",
                    "additionalProperties": {
                        "model": { "$ref": "#/definitions/Author" },
                        "value_field": "name",
                        "view_field": "name",
                        "view_separator": ",",
                        "usePrefetch": false,
                        "makeLink": true,
                        "dependence": null
                    },
                    "x-nullable": true
                },
                "namedbinfile": {
                    "title": "Namedbinfile",
                    "type": "string",
                    "format": "namedbinfile",
                    "x-nullable": true
                },
                "namedbinimage": {
                    "title": "Namedbinimage",
                    "type": "string",
                    "format": "namedbinimage",
                    "additionalProperties": {},
                    "x-nullable": true
                },
                "namedbinimage_validation": {
                    "title": "Namedbinimage validation",
                    "type": "string",
                    "format": "namedbinimage",
                    "additionalProperties": {
                        "min_width": 400,
                        "max_width": 800,
                        "min_height": 200,
                        "max_height": 400,
                        "extensions": ["bmp", "jpeg", "jpg", "png"]
                    },
                    "x-nullable": true
                },
                "password": {
                    "title": "Password",
                    "type": "string",
                    "format": "password",
                    "x-nullable": true
                },
                "rating_stars": {
                    "title": "Rating stars",
                    "type": "number",
                    "format": "rating",
                    "additionalProperties": {
                        "min_value": 0,
                        "max_value": 5,
                        "step": 1,
                        "style": "stars",
                        "color": "green",
                        "fa_class": null
                    },
                    "x-nullable": true
                },
                "rating_slider": {
                    "title": "Rating slider",
                    "type": "number",
                    "format": "rating",
                    "additionalProperties": {
                        "min_value": 0,
                        "max_value": 5,
                        "step": 0.3,
                        "style": "slider",
                        "color": "orange",
                        "fa_class": null
                    }
                },
                "rating_icon": {
                    "title": "Rating icon",
                    "type": "number",
                    "format": "rating",
                    "additionalProperties": {
                        "min_value": 0,
                        "max_value": 5,
                        "step": 1,
                        "style": "fa_icon",
                        "color": "DeepPink",
                        "fa_class": "fas fa-poo-storm"
                    }
                },
                "secretfile": {
                    "title": "Secretfile",
                    "type": "string",
                    "format": "secretfile",
                    "x-nullable": true
                },
                "textarea": { "title": "Textarea", "type": "string", "format": "textarea", "default": "" },
                "uptime": { "title": "Uptime", "type": "integer", "format": "uptime", "x-nullable": true }
            },
            "x-properties-groups": {
                "": [
                    "id",
                    "autocomplete_model",
                    "autocomplete_enum",
                    "binfile",
                    "boolean",
                    "choices",
                    "color",
                    "crontab",
                    "date",
                    "date_time",
                    "decimal",
                    "dynamic_fk",
                    "dynamic",
                    "email",
                    "file",
                    "fk",
                    "float",
                    "html",
                    "integer",
                    "json",
                    "multiplenamedbinfile",
                    "multiplenamedbinimage",
                    "multiplenamedbinimage_validation",
                    "multiselect_model",
                    "namedbinfile",
                    "namedbinimage",
                    "namedbinimage_validation",
                    "password",
                    "rating_stars",
                    "rating_slider",
                    "rating_icon",
                    "secretfile",
                    "textarea",
                    "uptime"
                ]
            }
        },
        "OneAllFields": {
            "required": [
                "autocomplete_model",
                "autocomplete_enum",
                "binfile",
                "dynamic_fk",
                "dynamic",
                "file",
                "fk",
                "html",
                "multiselect_model",
                "namedbinfile",
                "namedbinimage",
                "namedbinimage_validation",
                "rating_stars",
                "rating_slider",
                "rating_icon",
                "secretfile",
                "uptime"
            ],
            "type": "object",
            "properties": {
                "id": { "title": "Id", "type": "integer", "readOnly": true },
                "autocomplete_model": {
                    "title": "Autocomplete model",
                    "type": "string",
                    "format": "fk_autocomplete",
                    "additionalProperties": {
                        "model": { "$ref": "#/definitions/Author" },
                        "value_field": "name",
                        "view_field": "name"
                    },
                    "x-nullable": true
                },
                "autocomplete_enum": {
                    "title": "Autocomplete enum",
                    "type": "string",
                    "format": "autocomplete",
                    "enum": ["Author 1", "Author 2"],
                    "x-nullable": true
                },
                "binfile": { "title": "Binfile", "type": "string", "format": "binfile", "x-nullable": true },
                "boolean": { "title": "Boolean", "type": "boolean" },
                "choices": {
                    "title": "Choices",
                    "type": "string",
                    "enum": ["integer", "boolean"],
                    "x-nullable": true
                },
                "color": {
                    "title": "Color",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 1,
                    "x-nullable": true,
                    "format": "color"
                },
                "crontab": {
                    "title": "Crontab",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1,
                    "x-nullable": true,
                    "format": "crontab"
                },
                "date": { "title": "Date", "type": "string", "format": "date", "x-nullable": true },
                "date_time": {
                    "title": "Date time",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "decimal": { "title": "Decimal", "type": "string", "format": "decimal" },
                "dynamic_fk": {
                    "title": "Dynamic fk",
                    "type": "string",
                    "format": "dynamic_fk",
                    "additionalProperties": { "field": "fk", "field_attribute": "field_type" }
                },
                "dynamic": {
                    "title": "Dynamic",
                    "type": "string",
                    "format": "dynamic",
                    "additionalProperties": {
                        "field": "choices",
                        "choices": {},
                        "types": { "integer": "integer", "boolean": "boolean" }
                    },
                    "x-nullable": true
                },
                "email": {
                    "title": "Email",
                    "type": "string",
                    "format": "email",
                    "maxLength": 254,
                    "x-nullable": true
                },
                "file": { "title": "File", "type": "string", "format": "file", "x-nullable": true },
                "fk": {
                    "title": "Fk",
                    "type": "integer",
                    "format": "fk",
                    "additionalProperties": {
                        "model": { "$ref": "#/definitions/PredefinedAttribute" },
                        "value_field": "id",
                        "view_field": "name",
                        "usePrefetch": true,
                        "makeLink": true,
                        "dependence": null
                    },
                    "x-nullable": true
                },
                "float": { "title": "Float", "type": "number", "x-nullable": true },
                "html": { "title": "Html", "type": "string", "format": "html" },
                "integer": { "title": "Integer", "type": "integer", "x-nullable": true },
                "json": { "title": "Json", "type": "string", "format": "json", "default": "{}" },
                "multiplenamedbinfile": {
                    "title": "Multiplenamedbinfile",
                    "type": "string",
                    "format": "multiplenamedbinfile"
                },
                "multiplenamedbinimage": {
                    "title": "Multiplenamedbinimage",
                    "type": "string",
                    "format": "multiplenamedbinimage",
                    "additionalProperties": {}
                },
                "multiplenamedbinimage_validation": {
                    "title": "Multiplenamedbinimage validation",
                    "type": "string",
                    "format": "multiplenamedbinimage",
                    "additionalProperties": {
                        "min_width": 400,
                        "max_width": 800,
                        "min_height": 200,
                        "max_height": 400,
                        "extensions": ["bmp", "jpeg", "jpg", "png"]
                    }
                },
                "multiselect_model": {
                    "title": "Multiselect model",
                    "type": "string",
                    "format": "multiselect",
                    "additionalProperties": {
                        "model": { "$ref": "#/definitions/Author" },
                        "value_field": "name",
                        "view_field": "name",
                        "view_separator": ",",
                        "usePrefetch": false,
                        "makeLink": true,
                        "dependence": null
                    },
                    "x-nullable": true
                },
                "namedbinfile": {
                    "title": "Namedbinfile",
                    "type": "string",
                    "format": "namedbinfile",
                    "x-nullable": true
                },
                "namedbinimage": {
                    "title": "Namedbinimage",
                    "type": "string",
                    "format": "namedbinimage",
                    "additionalProperties": {},
                    "x-nullable": true
                },
                "namedbinimage_validation": {
                    "title": "Namedbinimage validation",
                    "type": "string",
                    "format": "namedbinimage",
                    "additionalProperties": {
                        "min_width": 400,
                        "max_width": 800,
                        "min_height": 200,
                        "max_height": 400,
                        "extensions": ["bmp", "jpeg", "jpg", "png"]
                    },
                    "x-nullable": true
                },
                "password": {
                    "title": "Password",
                    "type": "string",
                    "format": "password",
                    "x-nullable": true
                },
                "rating_stars": {
                    "title": "Rating stars",
                    "type": "number",
                    "format": "rating",
                    "additionalProperties": {
                        "min_value": 0,
                        "max_value": 5,
                        "step": 1,
                        "style": "stars",
                        "color": "green",
                        "fa_class": null
                    },
                    "x-nullable": true
                },
                "rating_slider": {
                    "title": "Rating slider",
                    "type": "number",
                    "format": "rating",
                    "additionalProperties": {
                        "min_value": 0,
                        "max_value": 5,
                        "step": 0.3,
                        "style": "slider",
                        "color": "orange",
                        "fa_class": null
                    }
                },
                "rating_icon": {
                    "title": "Rating icon",
                    "type": "number",
                    "format": "rating",
                    "additionalProperties": {
                        "min_value": 0,
                        "max_value": 5,
                        "step": 1,
                        "style": "fa_icon",
                        "color": "DeepPink",
                        "fa_class": "fas fa-poo-storm"
                    }
                },
                "secretfile": {
                    "title": "Secretfile",
                    "type": "string",
                    "format": "secretfile",
                    "x-nullable": true
                },
                "textarea": { "title": "Textarea", "type": "string", "format": "textarea", "default": "" },
                "uptime": { "title": "Uptime", "type": "integer", "format": "uptime", "x-nullable": true }
            },
            "x-properties-groups": {
                "": [
                    "id",
                    "autocomplete_model",
                    "autocomplete_enum",
                    "binfile",
                    "boolean",
                    "choices",
                    "color",
                    "crontab",
                    "date",
                    "date_time",
                    "decimal",
                    "dynamic_fk",
                    "dynamic",
                    "email",
                    "file",
                    "fk",
                    "float",
                    "html",
                    "integer",
                    "json",
                    "multiplenamedbinfile",
                    "multiplenamedbinimage",
                    "multiplenamedbinimage_validation",
                    "multiselect_model",
                    "namedbinfile",
                    "namedbinimage",
                    "namedbinimage_validation",
                    "password",
                    "rating_stars",
                    "rating_slider",
                    "rating_icon",
                    "secretfile",
                    "textarea",
                    "uptime"
                ]
            }
        },
        "Author": {
            "required": ["name"],
            "type": "object",
            "properties": {
                "id": { "title": "Id", "type": "integer", "readOnly": true },
                "name": { "title": "Name", "type": "string", "maxLength": 256, "minLength": 1 },
                "posts": {
                    "title": "Posts",
                    "type": "string",
                    "format": "related_list",
                    "readOnly": true,
                    "additionalProperties": { "fields": ["title", "type"], "viewType": "list" }
                }
            },
            "x-properties-groups": { "": ["id", "name", "posts"] }
        },
        "OneAuthor": {
            "required": ["name"],
            "type": "object",
            "properties": {
                "id": { "title": "Id", "type": "integer", "readOnly": true },
                "name": { "title": "Name", "type": "string", "maxLength": 256, "minLength": 1 },
                "posts": {
                    "title": "Posts",
                    "type": "string",
                    "format": "related_list",
                    "readOnly": true,
                    "additionalProperties": { "fields": ["title", "type"], "viewType": "list" }
                }
            },
            "x-properties-groups": { "": ["id", "name", "posts"] }
        },
        "SubView": {
            "type": "object",
            "properties": {
                "item_name": { "title": "Item name", "type": "string", "default": "No name", "minLength": 1 },
                "item_value": {
                    "title": "Item value",
                    "type": "string",
                    "default": "No value",
                    "minLength": 1
                }
            },
            "x-properties-groups": { "": ["item_name", "item_value"] }
        },
        "Post": {
            "required": ["author", "category", "title"],
            "type": "object",
            "properties": {
                "id": { "title": "Id", "type": "integer", "readOnly": true },
                "author": {
                    "title": "Author",
                    "type": "integer",
                    "format": "fk",
                    "additionalProperties": {
                        "model": { "$ref": "#/definitions/Author" },
                        "value_field": "id",
                        "view_field": "name",
                        "usePrefetch": true,
                        "makeLink": true,
                        "dependence": null
                    }
                },
                "category": {
                    "title": "Category",
                    "type": "integer",
                    "format": "fk",
                    "additionalProperties": {
                        "model": { "$ref": "#/definitions/Category" },
                        "value_field": "id",
                        "view_field": "name",
                        "usePrefetch": true,
                        "makeLink": true,
                        "dependence": null
                    },
                    "x-nullable": true
                },
                "title": { "title": "Title", "type": "string", "maxLength": 255, "minLength": 1 }
            },
            "x-properties-groups": {
                "Main": ["author", "title", "type", "category"],
                "Content": ["text"],
                "": ["id"]
            }
        },
        "OnePost": {
            "required": ["author", "title", "text", "category", "type"],
            "type": "object",
            "properties": {
                "id": { "title": "Id", "type": "integer", "readOnly": true },
                "author": {
                    "title": "Author",
                    "type": "integer",
                    "format": "fk",
                    "additionalProperties": {
                        "model": { "$ref": "#/definitions/Author" },
                        "value_field": "id",
                        "view_field": "name",
                        "usePrefetch": true,
                        "makeLink": true,
                        "dependence": null
                    }
                },
                "title": { "title": "Title", "type": "string", "maxLength": 255, "minLength": 1 },
                "text": { "title": "Text", "type": "string", "format": "textarea" },
                "category": {
                    "title": "Category",
                    "type": "integer",
                    "format": "fk",
                    "additionalProperties": {
                        "model": { "$ref": "#/definitions/Category" },
                        "value_field": "id",
                        "view_field": "name",
                        "usePrefetch": true,
                        "makeLink": true,
                        "dependence": null
                    },
                    "x-nullable": true
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "format": "fk_autocomplete",
                    "additionalProperties": {
                        "model": { "$ref": "#/definitions/PredefinedPostType" },
                        "value_field": "name",
                        "view_field": "name"
                    }
                }
            },
            "x-properties-groups": {
                "Main": ["author", "title", "type", "category"],
                "Content": ["text"],
                "": ["id"]
            }
        },
        "Empty": { "type": "object", "properties": {}, "x-properties-groups": { "": [] } },
        "ChangeTitle": {
            "required": ["title"],
            "type": "object",
            "properties": { "title": { "title": "Title", "type": "string", "minLength": 1 } },
            "x-properties-groups": { "": ["title"] }
        },
        "PostMeta": {
            "required": ["key", "value"],
            "type": "object",
            "properties": {
                "id": { "title": "Id", "type": "integer", "readOnly": true },
                "key": { "title": "Key", "type": "string", "maxLength": 255, "minLength": 1 },
                "value": { "title": "Value", "type": "string", "maxLength": 255, "minLength": 1 }
            },
            "x-properties-groups": { "": ["id", "key", "value"] }
        },
        "OnePostMeta": {
            "required": ["key", "value"],
            "type": "object",
            "properties": {
                "id": { "title": "Id", "type": "integer", "readOnly": true },
                "key": { "title": "Key", "type": "string", "enum": ["meta_title", "some_boolean"] },
                "value": {
                    "title": "Value",
                    "type": "string",
                    "format": "dynamic",
                    "additionalProperties": {
                        "field": "key",
                        "choices": {},
                        "types": { "meta_title": "string", "some_boolean": "boolean" }
                    }
                }
            },
            "x-properties-groups": { "": ["id", "key", "value"] }
        },
        "Category": {
            "required": ["name"],
            "type": "object",
            "properties": {
                "id": { "title": "Id", "type": "integer", "readOnly": true },
                "name": { "title": "Name", "type": "string", "maxLength": 256, "minLength": 1 }
            },
            "x-properties-groups": { "": ["id", "name"] }
        },
        "OneCategory": {
            "required": ["name"],
            "type": "object",
            "properties": {
                "id": { "title": "Id", "type": "integer", "readOnly": true },
                "name": { "title": "Name", "type": "string", "maxLength": 256, "minLength": 1 }
            },
            "x-properties-groups": { "": ["id", "name"] }
        },
        "PredefinedPostType": {
            "required": ["name"],
            "type": "object",
            "properties": {
                "id": { "title": "Id", "type": "integer", "readOnly": true },
                "name": { "title": "Name", "type": "string", "maxLength": 50, "minLength": 1 }
            },
            "x-properties-groups": { "": ["id", "name"] }
        },
        "OnePredefinedPostType": {
            "required": ["name"],
            "type": "object",
            "properties": {
                "id": { "title": "Id", "type": "integer", "readOnly": true },
                "name": { "title": "Name", "type": "string", "maxLength": 50, "minLength": 1 }
            },
            "x-properties-groups": { "": ["id", "name"] }
        },
        "PredefinedAttribute": {
            "required": ["name", "field_type"],
            "type": "object",
            "properties": {
                "id": { "title": "Id", "type": "integer", "readOnly": true },
                "name": { "title": "Name", "type": "string", "maxLength": 256, "minLength": 1 },
                "field_type": { "title": "Field type", "type": "string", "maxLength": 256, "minLength": 1 }
            },
            "x-properties-groups": { "": ["id", "name", "field_type"] }
        },
        "OnePredefinedAttribute": {
            "required": ["name", "field_type"],
            "type": "object",
            "properties": {
                "id": { "title": "Id", "type": "integer", "readOnly": true },
                "name": { "title": "Name", "type": "string", "maxLength": 256, "minLength": 1 },
                "field_type": { "title": "Field type", "type": "string", "enum": ["integer", "boolean"] }
            },
            "x-properties-groups": { "": ["id", "name", "field_type"] }
        },
        "User": {
            "required": ["username"],
            "type": "object",
            "properties": {
                "id": { "title": "ID", "type": "integer", "readOnly": true },
                "username": {
                    "title": "Username",
                    "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                    "type": "string",
                    "pattern": "^[\\w.@+-]+$",
                    "maxLength": 150,
                    "minLength": 1
                },
                "is_active": { "title": "Is active", "type": "boolean", "default": true },
                "is_staff": { "title": "Is staff", "type": "boolean", "default": false },
                "email": { "title": "Email", "type": "string", "format": "email", "minLength": 1 }
            },
            "x-properties-groups": { "": ["id", "username", "is_active", "is_staff", "email"] }
        },
        "CreateUser": {
            "required": ["username", "password", "password2"],
            "type": "object",
            "properties": {
                "id": { "title": "ID", "type": "integer", "readOnly": true },
                "username": {
                    "title": "Username",
                    "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                    "type": "string",
                    "pattern": "^[\\w.@+-]+$",
                    "maxLength": 150,
                    "minLength": 1
                },
                "is_active": { "title": "Is active", "type": "boolean", "default": true },
                "is_staff": { "title": "Is staff", "type": "boolean", "default": false },
                "first_name": { "title": "First name", "type": "string", "maxLength": 30 },
                "last_name": { "title": "Last name", "type": "string", "maxLength": 150 },
                "email": { "title": "Email", "type": "string", "format": "email", "minLength": 1 },
                "password": { "title": "Password", "type": "string", "minLength": 1 },
                "password2": { "title": "Repeat password", "type": "string", "minLength": 1 }
            },
            "x-properties-groups": {
                "": [
                    "id",
                    "username",
                    "is_active",
                    "is_staff",
                    "first_name",
                    "last_name",
                    "email",
                    "password",
                    "password2"
                ]
            }
        },
        "OneUser": {
            "required": ["username"],
            "type": "object",
            "properties": {
                "id": { "title": "ID", "type": "integer", "readOnly": true },
                "username": {
                    "title": "Username",
                    "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                    "type": "string",
                    "pattern": "^[\\w.@+-]+$",
                    "maxLength": 150,
                    "minLength": 1
                },
                "is_active": { "title": "Is active", "type": "boolean", "default": true },
                "is_staff": { "title": "Is staff", "type": "boolean", "default": false },
                "first_name": { "title": "First name", "type": "string", "maxLength": 30 },
                "last_name": { "title": "Last name", "type": "string", "maxLength": 150 },
                "email": { "title": "Email", "type": "string", "format": "email", "minLength": 1 }
            },
            "x-properties-groups": {
                "": ["id", "username", "is_active", "is_staff", "first_name", "last_name", "email"]
            }
        },
        "ChangePassword": {
            "required": ["old_password", "password", "password2"],
            "type": "object",
            "properties": {
                "old_password": { "title": "Old password", "type": "string", "format": "password" },
                "password": { "title": "New password", "type": "string", "format": "password" },
                "password2": { "title": "Confirm new password", "type": "string", "format": "password" }
            },
            "x-properties-groups": { "": ["old_password", "password", "password2"] }
        }
    }
}
