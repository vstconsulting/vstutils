{
    "swagger": "2.0",
    "info": {
        "title": "QuickStart",
        "termsOfService": "",
        "contact": {
            "name": "System Administrator"
        },
        "x-docs": {
            "has_docs": false,
            "docs_url": "/docs/"
        },
        "x-links": {
            "vstutils": {
                "url": "https://github.com/vstconsulting/vstutils.git",
                "name": "VST Utils sources"
            }
        },
        "x-menu": [
            {
                "name": "Authors",
                "url": "/author",
                "span_class": "fa fa-cog"
            },
            {
                "name": "Categories",
                "url": "/category",
                "span_class": "fa fa-cog"
            },
            {
                "name": "Posts",
                "url": "/post",
                "span_class": "fa fa-cog"
            },
            {
                "name": "Post Types",
                "url": "/post_types",
                "span_class": "fa fa-cog"
            },
            {
                "name": "Predefined Attributes",
                "url": "/predefined_attribute",
                "span_class": "fa fa-cog"
            },
            {
                "name": "All Fields",
                "url": "/all_fields",
                "span_class": "fa fa-cog"
            },
            {
                "name": "System",
                "span_class": "fa fa-cog",
                "sublinks": [
                    {
                        "name": "Users",
                        "url": "/user",
                        "span_class": "fa fa-user"
                    }
                ]
            }
        ],
        "x-page-limit": 20,
        "x-settings": {
            "static_path": "/static/",
            "enable_gravatar": true,
            "time_zone": "UTC",
            "logout_url": "/account/logout/",
            "login_url": "/account/login/"
        },
        "x-versions": {
            "application": "1.0.0",
            "library": "1.0.0",
            "vstutils": "5.0.0b57",
            "django": "3.2.3",
            "djangorestframework": "3.12.4",
            "drf_yasg": "1.20.0"
        },
        "version": "v1",
        "x-user-id": 1
    },
    "host": "quick.localhost",
    "schemes": [
        "http"
    ],
    "basePath": "/api/v1",
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json",
        "multipart/form-data; boundary=BoUnDaRyStRiNg"
    ],
    "securityDefinitions": {
        "basic": {
            "type": "basic"
        }
    },
    "security": [
        {
            "basic": []
        }
    ],
    "paths": {
        "/all_fields/": {
            "get": {
                "operationId": "all_fields_list",
                "description": "AllFields(id, hidden, array_color, array_fk, array_string, autocomplete_enum, autocomplete_model, binfile, boolean, choices, choices_obj, color, crontab, date, date_time, decimal, dynamic, dynamic_fk, email, file, fk, fk_in_char, fk_with_filters, float, html, integer, json, masked, multiplenamedbinfile, multiplenamedbinimage, multiplenamedbinimage_validation, multiselect_model, namedbinfile, namedbinimage, namedbinimage_validation, rating_stars, rating_slider, rating_icon, password, phone, qrcode, secretfile, textarea, uptime, file_as_file, image_as_file, smart_named_file, smart_named_image, smart_multiple_field, smart_multiple_image, smart_fk_field, smart_file_as_file, smart_image_as_file, fk_with_dependency, multiple_files, multiple_images_files)",
                "parameters": [
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "id",
                                "-id",
                                "array_color",
                                "-array_color",
                                "array_fk",
                                "-array_fk",
                                "array_string",
                                "-array_string",
                                "autocomplete_enum",
                                "-autocomplete_enum",
                                "autocomplete_model",
                                "-autocomplete_model",
                                "binfile",
                                "-binfile",
                                "boolean",
                                "-boolean",
                                "choices",
                                "-choices",
                                "choices_obj",
                                "-choices_obj",
                                "color",
                                "-color",
                                "crontab",
                                "-crontab",
                                "date",
                                "-date",
                                "date_time",
                                "-date_time",
                                "decimal",
                                "-decimal",
                                "dynamic_fk",
                                "-dynamic_fk",
                                "dynamic",
                                "-dynamic",
                                "email",
                                "-email",
                                "file",
                                "-file",
                                "fk",
                                "-fk",
                                "fk_in_char",
                                "-fk_in_char",
                                "fk_with_filters",
                                "-fk_with_filters",
                                "float",
                                "-float",
                                "html",
                                "-html",
                                "integer",
                                "-integer",
                                "json",
                                "-json",
                                "masked",
                                "-masked",
                                "multiplenamedbinfile",
                                "-multiplenamedbinfile",
                                "multiplenamedbinimage",
                                "-multiplenamedbinimage",
                                "multiplenamedbinimage_validation",
                                "-multiplenamedbinimage_validation",
                                "multiselect_model",
                                "-multiselect_model",
                                "namedbinfile",
                                "-namedbinfile",
                                "namedbinimage",
                                "-namedbinimage",
                                "namedbinimage_validation",
                                "-namedbinimage_validation",
                                "phone",
                                "-phone",
                                "qrcode",
                                "-qrcode",
                                "rating_stars",
                                "-rating_stars",
                                "rating_slider",
                                "-rating_slider",
                                "rating_icon",
                                "-rating_icon",
                                "secretfile",
                                "-secretfile",
                                "textarea",
                                "-textarea",
                                "uptime",
                                "-uptime",
                                "file_as_file",
                                "-file_as_file",
                                "image_as_file",
                                "-image_as_file",
                                "smart_named_file",
                                "-smart_named_file",
                                "smart_named_image",
                                "-smart_named_image",
                                "smart_multiple_field",
                                "-smart_multiple_field",
                                "smart_multiple_image",
                                "-smart_multiple_image",
                                "smart_fk_field",
                                "-smart_fk_field",
                                "multiple_files",
                                "-multiple_files",
                                "multiple_images_files",
                                "-multiple_images_files"
                            ]
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "__search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/AllFields"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "all_fields"
                ],
                "x-subscribe-labels": [
                    "quick.AllFields"
                ]
            },
            "post": {
                "operationId": "all_fields_add",
                "description": "AllFields(id, hidden, array_color, array_fk, array_string, autocomplete_enum, autocomplete_model, binfile, boolean, choices, choices_obj, color, crontab, date, date_time, decimal, dynamic, dynamic_fk, email, file, fk, fk_in_char, fk_with_filters, float, html, integer, json, masked, multiplenamedbinfile, multiplenamedbinimage, multiplenamedbinimage_validation, multiselect_model, namedbinfile, namedbinimage, namedbinimage_validation, rating_stars, rating_slider, rating_icon, password, phone, qrcode, secretfile, textarea, uptime, file_as_file, image_as_file, smart_named_file, smart_named_image, smart_multiple_field, smart_multiple_image, smart_fk_field, smart_file_as_file, smart_image_as_file, fk_with_dependency, multiple_files, multiple_images_files)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneAllFields"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": {
                            "$ref": "#/definitions/OneAllFields"
                        }
                    }
                },
                "tags": [
                    "all_fields"
                ]
            },
            "parameters": []
        },
        "/all_fields/{id}/": {
            "get": {
                "operationId": "all_fields_get",
                "description": "AllFields(id, hidden, array_color, array_fk, array_string, autocomplete_enum, autocomplete_model, binfile, boolean, choices, choices_obj, color, crontab, date, date_time, decimal, dynamic, dynamic_fk, email, file, fk, fk_in_char, fk_with_filters, float, html, integer, json, masked, multiplenamedbinfile, multiplenamedbinimage, multiplenamedbinimage_validation, multiselect_model, namedbinfile, namedbinimage, namedbinimage_validation, rating_stars, rating_slider, rating_icon, password, phone, qrcode, secretfile, textarea, uptime, file_as_file, image_as_file, smart_named_file, smart_named_image, smart_multiple_field, smart_multiple_image, smart_fk_field, smart_file_as_file, smart_image_as_file, fk_with_dependency, multiple_files, multiple_images_files)",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OneAllFields"
                        }
                    }
                },
                "tags": [
                    "all_fields"
                ],
                "x-subscribe-labels": [
                    "quick.AllFields"
                ]
            },
            "put": {
                "operationId": "all_fields_update",
                "description": "AllFields(id, hidden, array_color, array_fk, array_string, autocomplete_enum, autocomplete_model, binfile, boolean, choices, choices_obj, color, crontab, date, date_time, decimal, dynamic, dynamic_fk, email, file, fk, fk_in_char, fk_with_filters, float, html, integer, json, masked, multiplenamedbinfile, multiplenamedbinimage, multiplenamedbinimage_validation, multiselect_model, namedbinfile, namedbinimage, namedbinimage_validation, rating_stars, rating_slider, rating_icon, password, phone, qrcode, secretfile, textarea, uptime, file_as_file, image_as_file, smart_named_file, smart_named_image, smart_multiple_field, smart_multiple_image, smart_fk_field, smart_file_as_file, smart_image_as_file, fk_with_dependency, multiple_files, multiple_images_files)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneAllFields"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OneAllFields"
                        }
                    }
                },
                "tags": [
                    "all_fields"
                ]
            },
            "patch": {
                "operationId": "all_fields_edit",
                "description": "AllFields(id, hidden, array_color, array_fk, array_string, autocomplete_enum, autocomplete_model, binfile, boolean, choices, choices_obj, color, crontab, date, date_time, decimal, dynamic, dynamic_fk, email, file, fk, fk_in_char, fk_with_filters, float, html, integer, json, masked, multiplenamedbinfile, multiplenamedbinimage, multiplenamedbinimage_validation, multiselect_model, namedbinfile, namedbinimage, namedbinimage_validation, rating_stars, rating_slider, rating_icon, password, phone, qrcode, secretfile, textarea, uptime, file_as_file, image_as_file, smart_named_file, smart_named_image, smart_multiple_field, smart_multiple_image, smart_fk_field, smart_file_as_file, smart_image_as_file, fk_with_dependency, multiple_files, multiple_images_files)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneAllFields"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OneAllFields"
                        }
                    }
                },
                "tags": [
                    "all_fields"
                ]
            },
            "delete": {
                "operationId": "all_fields_remove",
                "description": "AllFields(id, hidden, array_color, array_fk, array_string, autocomplete_enum, autocomplete_model, binfile, boolean, choices, choices_obj, color, crontab, date, date_time, decimal, dynamic, dynamic_fk, email, file, fk, fk_in_char, fk_with_filters, float, html, integer, json, masked, multiplenamedbinfile, multiplenamedbinimage, multiplenamedbinimage_validation, multiselect_model, namedbinfile, namedbinimage, namedbinimage_validation, rating_stars, rating_slider, rating_icon, password, phone, qrcode, secretfile, textarea, uptime, file_as_file, image_as_file, smart_named_file, smart_named_image, smart_multiple_field, smart_multiple_image, smart_fk_field, smart_file_as_file, smart_image_as_file, fk_with_dependency, multiple_files, multiple_images_files)",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "NO CONTENT"
                    }
                },
                "tags": [
                    "all_fields"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this all fields.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/author/": {
            "get": {
                "operationId": "author_list",
                "description": "Author(id, hidden, name, register_date)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "name__not",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "id",
                                "-id",
                                "name",
                                "-name",
                                "register_date",
                                "-register_date"
                            ]
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "__search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Author"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "author"
                ],
                "x-subscribe-labels": [
                    "quick.Author"
                ]
            },
            "post": {
                "operationId": "author_add",
                "description": "Author(id, hidden, name, register_date)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneAuthor"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": {
                            "$ref": "#/definitions/OneAuthor"
                        }
                    }
                },
                "tags": [
                    "author"
                ]
            },
            "parameters": []
        },
        "/author/sub_with_post/": {
            "get": {
                "operationId": "author_sub_with_post_get",
                "description": "",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "name__not",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "item_name",
                                "-item_name",
                                "item_value",
                                "-item_value"
                            ]
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "__search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SubView"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "author"
                ],
                "x-subscribe-labels": [
                    "quick.Author"
                ]
            },
            "post": {
                "operationId": "author_sub_with_post_add",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubView"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": {
                            "$ref": "#/definitions/SubView"
                        }
                    }
                },
                "tags": [
                    "author"
                ],
                "x-multiaction": false
            },
            "delete": {
                "operationId": "author_sub_with_post_remove",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "NO CONTENT"
                    }
                },
                "tags": [
                    "author"
                ],
                "x-multiaction": false
            },
            "parameters": []
        },
        "/author/{id}/": {
            "get": {
                "operationId": "author_get",
                "description": "Author(id, hidden, name, register_date)",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OneAuthor"
                        }
                    }
                },
                "tags": [
                    "author"
                ],
                "x-subscribe-labels": [
                    "quick.Author"
                ]
            },
            "put": {
                "operationId": "author_update",
                "description": "Author(id, hidden, name, register_date)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneAuthor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OneAuthor"
                        }
                    }
                },
                "tags": [
                    "author"
                ]
            },
            "patch": {
                "operationId": "author_edit",
                "description": "Author(id, hidden, name, register_date)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuthorUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AuthorUpdate"
                        }
                    }
                },
                "tags": [
                    "author"
                ]
            },
            "delete": {
                "operationId": "author_remove",
                "description": "Author(id, hidden, name, register_date)",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "NO CONTENT"
                    }
                },
                "tags": [
                    "author"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/author/{id}/post/": {
            "get": {
                "operationId": "author_post_list",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "author",
                        "in": "query",
                        "description": "Search by author's primary key or name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Search by category's primary key or name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "id",
                                "-id",
                                "author",
                                "-author",
                                "category",
                                "-category",
                                "title",
                                "-title"
                            ]
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "__search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Post"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "author"
                ],
                "x-subscribe-labels": [
                    "quick.Post"
                ]
            },
            "post": {
                "operationId": "author_post_add",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnePost"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": {
                            "$ref": "#/definitions/OnePost"
                        }
                    }
                },
                "tags": [
                    "author"
                ],
                "x-allow-append": true
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/author/{id}/post/archive_all/": {
            "delete": {
                "operationId": "author_post_archive_all",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ArchiveAllResult"
                        }
                    }
                },
                "tags": [
                    "author"
                ],
                "x-multiaction": false,
                "x-label": "Archive All Posts"
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/author/{id}/post/{post_id}/": {
            "get": {
                "operationId": "author_post_get",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnePost"
                        }
                    }
                },
                "tags": [
                    "author"
                ],
                "x-subscribe-labels": [
                    "quick.Post"
                ]
            },
            "put": {
                "operationId": "author_post_update",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnePost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnePost"
                        }
                    }
                },
                "tags": [
                    "author"
                ]
            },
            "patch": {
                "operationId": "author_post_edit",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnePost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnePost"
                        }
                    }
                },
                "tags": [
                    "author"
                ]
            },
            "delete": {
                "operationId": "author_post_remove",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "NO CONTENT"
                    }
                },
                "tags": [
                    "author"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "post_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this post sublist."
                }
            ],
            "x-edit-style": true
        },
        "/author/{id}/post/{post_id}/archive/": {
            "post": {
                "operationId": "author_post_archive",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                },
                "tags": [
                    "author"
                ],
                "x-multiaction": false,
                "x-multi-action": true
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "post_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this post sublist."
                }
            ]
        },
        "/author/{id}/post/{post_id}/change_title/": {
            "patch": {
                "operationId": "author_post_change_title",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangeTitle"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ChangeTitleResult"
                        }
                    }
                },
                "tags": [
                    "author"
                ],
                "x-multiaction": true
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "post_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this post sublist."
                }
            ]
        },
        "/author/{id}/post/{post_id}/change_title_with_message/": {
            "patch": {
                "operationId": "author_post_change_title_with_message",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangeTitle"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                },
                "tags": [
                    "author"
                ],
                "x-multiaction": false
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "post_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this post sublist."
                }
            ]
        },
        "/author/{id}/post/{post_id}/meta/": {
            "get": {
                "operationId": "author_post_meta_list",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "id",
                                "-id",
                                "key",
                                "-key",
                                "value",
                                "-value"
                            ]
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "__search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PostMeta"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "author"
                ],
                "x-subscribe-labels": [
                    "quick.PostMeta"
                ]
            },
            "post": {
                "operationId": "author_post_meta_add",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnePostMeta"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": {
                            "$ref": "#/definitions/OnePostMeta"
                        }
                    }
                },
                "tags": [
                    "author"
                ],
                "x-allow-append": false
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "post_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this post sublist."
                }
            ]
        },
        "/author/{id}/post/{post_id}/meta/{meta_id}/": {
            "get": {
                "operationId": "author_post_meta_get",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnePostMeta"
                        }
                    }
                },
                "tags": [
                    "author"
                ],
                "x-subscribe-labels": [
                    "quick.PostMeta"
                ]
            },
            "put": {
                "operationId": "author_post_meta_update",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnePostMeta"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnePostMeta"
                        }
                    }
                },
                "tags": [
                    "author"
                ]
            },
            "patch": {
                "operationId": "author_post_meta_edit",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnePostMeta"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnePostMeta"
                        }
                    }
                },
                "tags": [
                    "author"
                ]
            },
            "delete": {
                "operationId": "author_post_meta_remove",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "NO CONTENT"
                    }
                },
                "tags": [
                    "author"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "meta_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "post_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this post sublist."
                }
            ]
        },
        "/author/{id}/post/{post_id}/sub/": {
            "get": {
                "operationId": "author_post_sub_get",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SubView"
                        }
                    }
                },
                "tags": [
                    "author"
                ],
                "x-subscribe-labels": [
                    "quick.Post"
                ]
            },
            "put": {
                "operationId": "author_post_sub_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubView"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SubView"
                        }
                    }
                },
                "tags": [
                    "author"
                ],
                "x-multiaction": false
            },
            "patch": {
                "operationId": "author_post_sub_edit",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubView"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SubView"
                        }
                    }
                },
                "tags": [
                    "author"
                ],
                "x-multiaction": false
            },
            "delete": {
                "operationId": "author_post_sub_remove",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "NO CONTENT"
                    }
                },
                "tags": [
                    "author"
                ],
                "x-multiaction": false
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "post_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this post sublist."
                }
            ]
        },
        "/category/": {
            "get": {
                "operationId": "category_list",
                "description": "Category(id, hidden, name, parent)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "name__not",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "id",
                                "-id",
                                "name",
                                "-name"
                            ]
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "__search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "__deep_parent",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Category"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "category"
                ],
                "x-subscribe-labels": [
                    "quick.Category"
                ],
                "x-deep-nested-view": "categories"
            },
            "post": {
                "operationId": "category_add",
                "description": "Category(id, hidden, name, parent)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": {
                            "$ref": "#/definitions/OneCategory"
                        }
                    }
                },
                "tags": [
                    "category"
                ]
            },
            "parameters": []
        },
        "/category/{id}/": {
            "get": {
                "operationId": "category_get",
                "description": "Category(id, hidden, name, parent)",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OneCategory"
                        }
                    }
                },
                "tags": [
                    "category"
                ],
                "x-subscribe-labels": [
                    "quick.Category"
                ],
                "x-deep-nested-view": "categories"
            },
            "put": {
                "operationId": "category_update",
                "description": "Category(id, hidden, name, parent)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OneCategory"
                        }
                    }
                },
                "tags": [
                    "category"
                ]
            },
            "patch": {
                "operationId": "category_edit",
                "description": "Category(id, hidden, name, parent)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OneCategory"
                        }
                    }
                },
                "tags": [
                    "category"
                ]
            },
            "delete": {
                "operationId": "category_remove",
                "description": "Category(id, hidden, name, parent)",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "NO CONTENT"
                    }
                },
                "tags": [
                    "category"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/category/{id}/categories/": {
            "get": {
                "operationId": "category_categories_list",
                "description": "Category(id, hidden, name, parent)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "name__not",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "id",
                                "-id",
                                "name",
                                "-name"
                            ]
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "__search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "__deep_parent",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Category"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "category"
                ],
                "x-subscribe-labels": [
                    "quick.Category"
                ]
            },
            "post": {
                "operationId": "category_categories_add",
                "description": "Category(id, hidden, name, parent)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": {
                            "$ref": "#/definitions/OneCategory"
                        }
                    }
                },
                "tags": [
                    "category"
                ],
                "x-allow-append": true
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/category/{id}/categories/{categories_id}/": {
            "get": {
                "operationId": "category_categories_get",
                "description": "Category(id, hidden, name, parent)",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OneCategory"
                        }
                    }
                },
                "tags": [
                    "category"
                ],
                "x-subscribe-labels": [
                    "quick.Category"
                ]
            },
            "put": {
                "operationId": "category_categories_update",
                "description": "Category(id, hidden, name, parent)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OneCategory"
                        }
                    }
                },
                "tags": [
                    "category"
                ]
            },
            "patch": {
                "operationId": "category_categories_edit",
                "description": "Category(id, hidden, name, parent)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OneCategory"
                        }
                    }
                },
                "tags": [
                    "category"
                ]
            },
            "delete": {
                "operationId": "category_categories_remove",
                "description": "Category(id, hidden, name, parent)",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "NO CONTENT"
                    }
                },
                "tags": [
                    "category"
                ]
            },
            "parameters": [
                {
                    "name": "categories_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this categories sublist."
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/category/{id}/categories/{categories_id}/change_name/": {
            "patch": {
                "operationId": "category_categories_change_name",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangeName"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                },
                "tags": [
                    "category"
                ],
                "x-multiaction": true
            },
            "parameters": [
                {
                    "name": "categories_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this categories sublist."
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/category/{id}/categories/{categories_id}/empty_action/": {
            "put": {
                "operationId": "category_categories_empty_action",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                },
                "tags": [
                    "category"
                ],
                "x-multiaction": false
            },
            "parameters": [
                {
                    "name": "categories_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this categories sublist."
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/category/{id}/categories/{categories_id}/hide_not_required/": {
            "post": {
                "operationId": "category_categories_hide_not_required",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HideNotRequired"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/HideNotRequired"
                        }
                    }
                },
                "tags": [
                    "category"
                ],
                "x-multiaction": false
            },
            "parameters": [
                {
                    "name": "categories_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this categories sublist."
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/category/{id}/change_name/": {
            "patch": {
                "operationId": "category_change_name",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangeName"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                },
                "tags": [
                    "category"
                ],
                "x-multiaction": true
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/category/{id}/empty_action/": {
            "put": {
                "operationId": "category_empty_action",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                },
                "tags": [
                    "category"
                ],
                "x-multiaction": false
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/category/{id}/hide_not_required/": {
            "post": {
                "operationId": "category_hide_not_required",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HideNotRequired"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/HideNotRequired"
                        }
                    }
                },
                "tags": [
                    "category"
                ],
                "x-multiaction": false
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/fragment1/fragment2/fragment3/fragment4/author/": {
            "get": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_list",
                "description": "Author(id, hidden, name, register_date)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "name__not",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "id",
                                "-id",
                                "name",
                                "-name",
                                "register_date",
                                "-register_date"
                            ]
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "__search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Author"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "fragment1"
                ],
                "x-subscribe-labels": [
                    "quick.Author"
                ]
            },
            "post": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_add",
                "description": "Author(id, hidden, name, register_date)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneAuthor"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": {
                            "$ref": "#/definitions/OneAuthor"
                        }
                    }
                },
                "tags": [
                    "fragment1"
                ]
            },
            "parameters": []
        },
        "/fragment1/fragment2/fragment3/fragment4/author/sub_with_post/": {
            "get": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_sub_with_post_get",
                "description": "",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "name__not",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "item_name",
                                "-item_name",
                                "item_value",
                                "-item_value"
                            ]
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "__search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/SubView"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "fragment1"
                ],
                "x-subscribe-labels": [
                    "quick.Author"
                ]
            },
            "post": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_sub_with_post_add",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubView"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": {
                            "$ref": "#/definitions/SubView"
                        }
                    }
                },
                "tags": [
                    "fragment1"
                ],
                "x-multiaction": false
            },
            "delete": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_sub_with_post_remove",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "NO CONTENT"
                    }
                },
                "tags": [
                    "fragment1"
                ],
                "x-multiaction": false
            },
            "parameters": []
        },
        "/fragment1/fragment2/fragment3/fragment4/author/{id}/": {
            "get": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_get",
                "description": "Author(id, hidden, name, register_date)",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OneAuthor"
                        }
                    }
                },
                "tags": [
                    "fragment1"
                ],
                "x-subscribe-labels": [
                    "quick.Author"
                ]
            },
            "put": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_update",
                "description": "Author(id, hidden, name, register_date)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneAuthor"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OneAuthor"
                        }
                    }
                },
                "tags": [
                    "fragment1"
                ]
            },
            "patch": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_edit",
                "description": "Author(id, hidden, name, register_date)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AuthorUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/AuthorUpdate"
                        }
                    }
                },
                "tags": [
                    "fragment1"
                ]
            },
            "delete": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_remove",
                "description": "Author(id, hidden, name, register_date)",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "NO CONTENT"
                    }
                },
                "tags": [
                    "fragment1"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/fragment1/fragment2/fragment3/fragment4/author/{id}/post/": {
            "get": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_list",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "author",
                        "in": "query",
                        "description": "Search by author's primary key or name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Search by category's primary key or name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "id",
                                "-id",
                                "author",
                                "-author",
                                "category",
                                "-category",
                                "title",
                                "-title"
                            ]
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "__search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Post"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "fragment1"
                ],
                "x-subscribe-labels": [
                    "quick.Post"
                ]
            },
            "post": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_add",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnePost"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": {
                            "$ref": "#/definitions/OnePost"
                        }
                    }
                },
                "tags": [
                    "fragment1"
                ],
                "x-allow-append": true
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/fragment1/fragment2/fragment3/fragment4/author/{id}/post/archive_all/": {
            "delete": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_archive_all",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ArchiveAllResult"
                        }
                    }
                },
                "tags": [
                    "fragment1"
                ],
                "x-multiaction": false,
                "x-label": "Archive All Posts"
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/fragment1/fragment2/fragment3/fragment4/author/{id}/post/{post_id}/": {
            "get": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_get",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnePost"
                        }
                    }
                },
                "tags": [
                    "fragment1"
                ],
                "x-subscribe-labels": [
                    "quick.Post"
                ]
            },
            "put": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_update",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnePost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnePost"
                        }
                    }
                },
                "tags": [
                    "fragment1"
                ]
            },
            "patch": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_edit",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnePost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnePost"
                        }
                    }
                },
                "tags": [
                    "fragment1"
                ]
            },
            "delete": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_remove",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "NO CONTENT"
                    }
                },
                "tags": [
                    "fragment1"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "post_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this post sublist."
                }
            ],
            "x-edit-style": true
        },
        "/fragment1/fragment2/fragment3/fragment4/author/{id}/post/{post_id}/archive/": {
            "post": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_archive",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                },
                "tags": [
                    "fragment1"
                ],
                "x-multiaction": false,
                "x-multi-action": true
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "post_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this post sublist."
                }
            ]
        },
        "/fragment1/fragment2/fragment3/fragment4/author/{id}/post/{post_id}/change_title/": {
            "patch": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_change_title",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangeTitle"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ChangeTitleResult"
                        }
                    }
                },
                "tags": [
                    "fragment1"
                ],
                "x-multiaction": true
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "post_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this post sublist."
                }
            ]
        },
        "/fragment1/fragment2/fragment3/fragment4/author/{id}/post/{post_id}/change_title_with_message/": {
            "patch": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_change_title_with_message",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangeTitle"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                },
                "tags": [
                    "fragment1"
                ],
                "x-multiaction": false
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "post_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this post sublist."
                }
            ]
        },
        "/fragment1/fragment2/fragment3/fragment4/author/{id}/post/{post_id}/meta/": {
            "get": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_meta_list",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "id",
                                "-id",
                                "key",
                                "-key",
                                "value",
                                "-value"
                            ]
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "__search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PostMeta"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "fragment1"
                ],
                "x-subscribe-labels": [
                    "quick.PostMeta"
                ]
            },
            "post": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_meta_add",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnePostMeta"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": {
                            "$ref": "#/definitions/OnePostMeta"
                        }
                    }
                },
                "tags": [
                    "fragment1"
                ],
                "x-allow-append": false
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "post_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this post sublist."
                }
            ]
        },
        "/fragment1/fragment2/fragment3/fragment4/author/{id}/post/{post_id}/meta/{meta_id}/": {
            "get": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_meta_get",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnePostMeta"
                        }
                    }
                },
                "tags": [
                    "fragment1"
                ],
                "x-subscribe-labels": [
                    "quick.PostMeta"
                ]
            },
            "put": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_meta_update",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnePostMeta"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnePostMeta"
                        }
                    }
                },
                "tags": [
                    "fragment1"
                ]
            },
            "patch": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_meta_edit",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnePostMeta"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnePostMeta"
                        }
                    }
                },
                "tags": [
                    "fragment1"
                ]
            },
            "delete": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_meta_remove",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "NO CONTENT"
                    }
                },
                "tags": [
                    "fragment1"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "meta_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "post_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this post sublist."
                }
            ]
        },
        "/fragment1/fragment2/fragment3/fragment4/author/{id}/post/{post_id}/sub/": {
            "get": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_sub_get",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SubView"
                        }
                    }
                },
                "tags": [
                    "fragment1"
                ],
                "x-subscribe-labels": [
                    "quick.Post"
                ]
            },
            "put": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_sub_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubView"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SubView"
                        }
                    }
                },
                "tags": [
                    "fragment1"
                ],
                "x-multiaction": false
            },
            "patch": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_sub_edit",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubView"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SubView"
                        }
                    }
                },
                "tags": [
                    "fragment1"
                ],
                "x-multiaction": false
            },
            "delete": {
                "operationId": "fragment1_fragment2_fragment3_fragment4_author_post_sub_remove",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "NO CONTENT"
                    }
                },
                "tags": [
                    "fragment1"
                ],
                "x-multiaction": false
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this author.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "post_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this post sublist."
                }
            ]
        },
        "/nested/category/": {
            "get": {
                "operationId": "nested_category_list",
                "description": "Category(id, hidden, name, parent)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "name__not",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "id",
                                "-id",
                                "name",
                                "-name"
                            ]
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "__search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "__deep_parent",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Category"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "nested"
                ],
                "x-subscribe-labels": [
                    "quick.Category"
                ],
                "x-deep-nested-view": "categories"
            },
            "post": {
                "operationId": "nested_category_add",
                "description": "Category(id, hidden, name, parent)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": {
                            "$ref": "#/definitions/OneCategory"
                        }
                    }
                },
                "tags": [
                    "nested"
                ]
            },
            "parameters": []
        },
        "/nested/category/{id}/": {
            "get": {
                "operationId": "nested_category_get",
                "description": "Category(id, hidden, name, parent)",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OneCategory"
                        }
                    }
                },
                "tags": [
                    "nested"
                ],
                "x-subscribe-labels": [
                    "quick.Category"
                ],
                "x-deep-nested-view": "categories"
            },
            "put": {
                "operationId": "nested_category_update",
                "description": "Category(id, hidden, name, parent)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OneCategory"
                        }
                    }
                },
                "tags": [
                    "nested"
                ]
            },
            "patch": {
                "operationId": "nested_category_edit",
                "description": "Category(id, hidden, name, parent)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OneCategory"
                        }
                    }
                },
                "tags": [
                    "nested"
                ]
            },
            "delete": {
                "operationId": "nested_category_remove",
                "description": "Category(id, hidden, name, parent)",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "NO CONTENT"
                    }
                },
                "tags": [
                    "nested"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/nested/category/{id}/categories/": {
            "get": {
                "operationId": "nested_category_categories_list",
                "description": "Category(id, hidden, name, parent)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "name__not",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "id",
                                "-id",
                                "name",
                                "-name"
                            ]
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "__search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "__deep_parent",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Category"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "nested"
                ],
                "x-subscribe-labels": [
                    "quick.Category"
                ]
            },
            "post": {
                "operationId": "nested_category_categories_add",
                "description": "Category(id, hidden, name, parent)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneCategory"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": {
                            "$ref": "#/definitions/OneCategory"
                        }
                    }
                },
                "tags": [
                    "nested"
                ],
                "x-allow-append": true
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/nested/category/{id}/categories/{categories_id}/": {
            "get": {
                "operationId": "nested_category_categories_get",
                "description": "Category(id, hidden, name, parent)",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OneCategory"
                        }
                    }
                },
                "tags": [
                    "nested"
                ],
                "x-subscribe-labels": [
                    "quick.Category"
                ]
            },
            "put": {
                "operationId": "nested_category_categories_update",
                "description": "Category(id, hidden, name, parent)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OneCategory"
                        }
                    }
                },
                "tags": [
                    "nested"
                ]
            },
            "patch": {
                "operationId": "nested_category_categories_edit",
                "description": "Category(id, hidden, name, parent)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneCategory"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OneCategory"
                        }
                    }
                },
                "tags": [
                    "nested"
                ]
            },
            "delete": {
                "operationId": "nested_category_categories_remove",
                "description": "Category(id, hidden, name, parent)",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "NO CONTENT"
                    }
                },
                "tags": [
                    "nested"
                ]
            },
            "parameters": [
                {
                    "name": "categories_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this categories sublist."
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/nested/category/{id}/categories/{categories_id}/change_name/": {
            "patch": {
                "operationId": "nested_category_categories_change_name",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangeName"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                },
                "tags": [
                    "nested"
                ],
                "x-multiaction": true
            },
            "parameters": [
                {
                    "name": "categories_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this categories sublist."
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/nested/category/{id}/categories/{categories_id}/empty_action/": {
            "put": {
                "operationId": "nested_category_categories_empty_action",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                },
                "tags": [
                    "nested"
                ],
                "x-multiaction": false
            },
            "parameters": [
                {
                    "name": "categories_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this categories sublist."
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/nested/category/{id}/categories/{categories_id}/hide_not_required/": {
            "post": {
                "operationId": "nested_category_categories_hide_not_required",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HideNotRequired"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/HideNotRequired"
                        }
                    }
                },
                "tags": [
                    "nested"
                ],
                "x-multiaction": false
            },
            "parameters": [
                {
                    "name": "categories_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this categories sublist."
                },
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/nested/category/{id}/change_name/": {
            "patch": {
                "operationId": "nested_category_change_name",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangeName"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                },
                "tags": [
                    "nested"
                ],
                "x-multiaction": true
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/nested/category/{id}/empty_action/": {
            "put": {
                "operationId": "nested_category_empty_action",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                },
                "tags": [
                    "nested"
                ],
                "x-multiaction": false
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/nested/category/{id}/hide_not_required/": {
            "post": {
                "operationId": "nested_category_hide_not_required",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HideNotRequired"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/HideNotRequired"
                        }
                    }
                },
                "tags": [
                    "nested"
                ],
                "x-multiaction": false
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this category.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/nested/nested/post/": {
            "get": {
                "operationId": "nested_nested_post_list",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "author",
                        "in": "query",
                        "description": "Search by author's primary key or name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Search by category's primary key or name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "id",
                                "-id",
                                "author",
                                "-author",
                                "category",
                                "-category",
                                "title",
                                "-title"
                            ]
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "__search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Post"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "nested"
                ],
                "x-subscribe-labels": [
                    "quick.Post"
                ]
            },
            "post": {
                "operationId": "nested_nested_post_add",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnePost"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": {
                            "$ref": "#/definitions/OnePost"
                        }
                    }
                },
                "tags": [
                    "nested"
                ]
            },
            "parameters": []
        },
        "/nested/nested/post/archive_all/": {
            "delete": {
                "operationId": "nested_nested_post_archive_all",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ArchiveAllResult"
                        }
                    }
                },
                "tags": [
                    "nested"
                ],
                "x-multiaction": false,
                "x-label": "Archive All Posts"
            },
            "parameters": []
        },
        "/nested/nested/post/{id}/": {
            "get": {
                "operationId": "nested_nested_post_get",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnePost"
                        }
                    }
                },
                "tags": [
                    "nested"
                ],
                "x-subscribe-labels": [
                    "quick.Post"
                ]
            },
            "put": {
                "operationId": "nested_nested_post_update",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnePost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnePost"
                        }
                    }
                },
                "tags": [
                    "nested"
                ]
            },
            "patch": {
                "operationId": "nested_nested_post_edit",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnePost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnePost"
                        }
                    }
                },
                "tags": [
                    "nested"
                ]
            },
            "delete": {
                "operationId": "nested_nested_post_remove",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "NO CONTENT"
                    }
                },
                "tags": [
                    "nested"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this post.",
                    "required": true,
                    "type": "integer"
                }
            ],
            "x-edit-style": true
        },
        "/nested/nested/post/{id}/archive/": {
            "post": {
                "operationId": "nested_nested_post_archive",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                },
                "tags": [
                    "nested"
                ],
                "x-multiaction": false,
                "x-multi-action": true
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this post.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/nested/nested/post/{id}/change_title/": {
            "patch": {
                "operationId": "nested_nested_post_change_title",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangeTitle"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ChangeTitleResult"
                        }
                    }
                },
                "tags": [
                    "nested"
                ],
                "x-multiaction": true
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this post.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/nested/nested/post/{id}/change_title_with_message/": {
            "patch": {
                "operationId": "nested_nested_post_change_title_with_message",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangeTitle"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                },
                "tags": [
                    "nested"
                ],
                "x-multiaction": false
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this post.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/nested/nested/post/{id}/meta/": {
            "get": {
                "operationId": "nested_nested_post_meta_list",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "id",
                                "-id",
                                "key",
                                "-key",
                                "value",
                                "-value"
                            ]
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "__search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PostMeta"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "nested"
                ],
                "x-subscribe-labels": [
                    "quick.PostMeta"
                ]
            },
            "post": {
                "operationId": "nested_nested_post_meta_add",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnePostMeta"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": {
                            "$ref": "#/definitions/OnePostMeta"
                        }
                    }
                },
                "tags": [
                    "nested"
                ],
                "x-allow-append": false
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this post.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/nested/nested/post/{id}/meta/{meta_id}/": {
            "get": {
                "operationId": "nested_nested_post_meta_get",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnePostMeta"
                        }
                    }
                },
                "tags": [
                    "nested"
                ],
                "x-subscribe-labels": [
                    "quick.PostMeta"
                ]
            },
            "put": {
                "operationId": "nested_nested_post_meta_update",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnePostMeta"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnePostMeta"
                        }
                    }
                },
                "tags": [
                    "nested"
                ]
            },
            "patch": {
                "operationId": "nested_nested_post_meta_edit",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnePostMeta"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnePostMeta"
                        }
                    }
                },
                "tags": [
                    "nested"
                ]
            },
            "delete": {
                "operationId": "nested_nested_post_meta_remove",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "NO CONTENT"
                    }
                },
                "tags": [
                    "nested"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this post.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "meta_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this meta sublist."
                }
            ]
        },
        "/nested/nested/post/{id}/sub/": {
            "get": {
                "operationId": "nested_nested_post_sub_get",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SubView"
                        }
                    }
                },
                "tags": [
                    "nested"
                ],
                "x-subscribe-labels": [
                    "quick.Post"
                ]
            },
            "put": {
                "operationId": "nested_nested_post_sub_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubView"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SubView"
                        }
                    }
                },
                "tags": [
                    "nested"
                ],
                "x-multiaction": false
            },
            "patch": {
                "operationId": "nested_nested_post_sub_edit",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubView"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SubView"
                        }
                    }
                },
                "tags": [
                    "nested"
                ],
                "x-multiaction": false
            },
            "delete": {
                "operationId": "nested_nested_post_sub_remove",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "NO CONTENT"
                    }
                },
                "tags": [
                    "nested"
                ],
                "x-multiaction": false
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this post.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/post/": {
            "get": {
                "operationId": "post_list",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "author",
                        "in": "query",
                        "description": "Search by author's primary key or name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "category",
                        "in": "query",
                        "description": "Search by category's primary key or name",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "title",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "id",
                                "-id",
                                "author",
                                "-author",
                                "category",
                                "-category",
                                "title",
                                "-title"
                            ]
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "__search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/Post"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "post"
                ],
                "x-subscribe-labels": [
                    "quick.Post"
                ]
            },
            "post": {
                "operationId": "post_add",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnePost"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": {
                            "$ref": "#/definitions/OnePost"
                        }
                    }
                },
                "tags": [
                    "post"
                ]
            },
            "parameters": []
        },
        "/post/archive_all/": {
            "delete": {
                "operationId": "post_archive_all",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ArchiveAllResult"
                        }
                    }
                },
                "tags": [
                    "post"
                ],
                "x-multiaction": false,
                "x-label": "Archive All Posts"
            },
            "parameters": []
        },
        "/post/{id}/": {
            "get": {
                "operationId": "post_get",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnePost"
                        }
                    }
                },
                "tags": [
                    "post"
                ],
                "x-subscribe-labels": [
                    "quick.Post"
                ]
            },
            "put": {
                "operationId": "post_update",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnePost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnePost"
                        }
                    }
                },
                "tags": [
                    "post"
                ]
            },
            "patch": {
                "operationId": "post_edit",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnePost"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnePost"
                        }
                    }
                },
                "tags": [
                    "post"
                ]
            },
            "delete": {
                "operationId": "post_remove",
                "description": "Post(id, hidden, author, title, text, category, type)",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "NO CONTENT"
                    }
                },
                "tags": [
                    "post"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this post.",
                    "required": true,
                    "type": "integer"
                }
            ],
            "x-edit-style": true
        },
        "/post/{id}/archive/": {
            "post": {
                "operationId": "post_archive",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                },
                "tags": [
                    "post"
                ],
                "x-multiaction": false,
                "x-multi-action": true
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this post.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/post/{id}/change_title/": {
            "patch": {
                "operationId": "post_change_title",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangeTitle"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/ChangeTitleResult"
                        }
                    }
                },
                "tags": [
                    "post"
                ],
                "x-multiaction": true
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this post.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/post/{id}/change_title_with_message/": {
            "patch": {
                "operationId": "post_change_title_with_message",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangeTitle"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/Empty"
                        }
                    }
                },
                "tags": [
                    "post"
                ],
                "x-multiaction": false
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this post.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/post/{id}/meta/": {
            "get": {
                "operationId": "post_meta_list",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "key",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "value",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "id",
                                "-id",
                                "key",
                                "-key",
                                "value",
                                "-value"
                            ]
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "__search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PostMeta"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "post"
                ],
                "x-subscribe-labels": [
                    "quick.PostMeta"
                ]
            },
            "post": {
                "operationId": "post_meta_add",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnePostMeta"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": {
                            "$ref": "#/definitions/OnePostMeta"
                        }
                    }
                },
                "tags": [
                    "post"
                ],
                "x-allow-append": false
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this post.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/post/{id}/meta/{meta_id}/": {
            "get": {
                "operationId": "post_meta_get",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnePostMeta"
                        }
                    }
                },
                "tags": [
                    "post"
                ],
                "x-subscribe-labels": [
                    "quick.PostMeta"
                ]
            },
            "put": {
                "operationId": "post_meta_update",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnePostMeta"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnePostMeta"
                        }
                    }
                },
                "tags": [
                    "post"
                ]
            },
            "patch": {
                "operationId": "post_meta_edit",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnePostMeta"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnePostMeta"
                        }
                    }
                },
                "tags": [
                    "post"
                ]
            },
            "delete": {
                "operationId": "post_meta_remove",
                "description": "PostMeta(id, hidden, key, value, post)",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "NO CONTENT"
                    }
                },
                "tags": [
                    "post"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this post.",
                    "required": true,
                    "type": "integer"
                },
                {
                    "name": "meta_id",
                    "in": "path",
                    "required": true,
                    "type": "integer",
                    "description": "A unique integer value identifying instance of this meta sublist."
                }
            ]
        },
        "/post/{id}/sub/": {
            "get": {
                "operationId": "post_sub_get",
                "description": "",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SubView"
                        }
                    }
                },
                "tags": [
                    "post"
                ],
                "x-subscribe-labels": [
                    "quick.Post"
                ]
            },
            "put": {
                "operationId": "post_sub_update",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubView"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SubView"
                        }
                    }
                },
                "tags": [
                    "post"
                ],
                "x-multiaction": false
            },
            "patch": {
                "operationId": "post_sub_edit",
                "description": "",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubView"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/SubView"
                        }
                    }
                },
                "tags": [
                    "post"
                ],
                "x-multiaction": false
            },
            "delete": {
                "operationId": "post_sub_remove",
                "description": "",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "NO CONTENT"
                    }
                },
                "tags": [
                    "post"
                ],
                "x-multiaction": false
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this post.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/post_types/": {
            "get": {
                "operationId": "post_types_list",
                "description": "PredefinedPostType(id, hidden, name)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "name__not",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "id",
                                "-id",
                                "name",
                                "-name"
                            ]
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "__search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PredefinedPostType"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "post_types"
                ],
                "x-subscribe-labels": [
                    "quick.PredefinedPostType"
                ]
            },
            "post": {
                "operationId": "post_types_add",
                "description": "PredefinedPostType(id, hidden, name)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnePredefinedPostType"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": {
                            "$ref": "#/definitions/OnePredefinedPostType"
                        }
                    }
                },
                "tags": [
                    "post_types"
                ]
            },
            "parameters": []
        },
        "/post_types/{id}/": {
            "get": {
                "operationId": "post_types_get",
                "description": "PredefinedPostType(id, hidden, name)",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnePredefinedPostType"
                        }
                    }
                },
                "tags": [
                    "post_types"
                ],
                "x-subscribe-labels": [
                    "quick.PredefinedPostType"
                ]
            },
            "put": {
                "operationId": "post_types_update",
                "description": "PredefinedPostType(id, hidden, name)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnePredefinedPostType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnePredefinedPostType"
                        }
                    }
                },
                "tags": [
                    "post_types"
                ]
            },
            "patch": {
                "operationId": "post_types_edit",
                "description": "PredefinedPostType(id, hidden, name)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnePredefinedPostType"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnePredefinedPostType"
                        }
                    }
                },
                "tags": [
                    "post_types"
                ]
            },
            "delete": {
                "operationId": "post_types_remove",
                "description": "PredefinedPostType(id, hidden, name)",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "NO CONTENT"
                    }
                },
                "tags": [
                    "post_types"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this predefined post type.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/predefined_attribute/": {
            "get": {
                "operationId": "predefined_attribute_list",
                "description": "PredefinedAttribute(id, hidden, name, field_type)",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "field_type",
                        "in": "query",
                        "description": "",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "name__not",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "id",
                                "-id",
                                "name",
                                "-name",
                                "field_type",
                                "-field_type"
                            ]
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "__search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/PredefinedAttribute"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "predefined_attribute"
                ],
                "x-subscribe-labels": [
                    "quick.PredefinedAttribute"
                ]
            },
            "post": {
                "operationId": "predefined_attribute_add",
                "description": "PredefinedAttribute(id, hidden, name, field_type)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnePredefinedAttribute"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": {
                            "$ref": "#/definitions/OnePredefinedAttribute"
                        }
                    }
                },
                "tags": [
                    "predefined_attribute"
                ]
            },
            "parameters": []
        },
        "/predefined_attribute/{id}/": {
            "get": {
                "operationId": "predefined_attribute_get",
                "description": "PredefinedAttribute(id, hidden, name, field_type)",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnePredefinedAttribute"
                        }
                    }
                },
                "tags": [
                    "predefined_attribute"
                ],
                "x-subscribe-labels": [
                    "quick.PredefinedAttribute"
                ]
            },
            "put": {
                "operationId": "predefined_attribute_update",
                "description": "PredefinedAttribute(id, hidden, name, field_type)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnePredefinedAttribute"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnePredefinedAttribute"
                        }
                    }
                },
                "tags": [
                    "predefined_attribute"
                ]
            },
            "patch": {
                "operationId": "predefined_attribute_edit",
                "description": "PredefinedAttribute(id, hidden, name, field_type)",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OnePredefinedAttribute"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OnePredefinedAttribute"
                        }
                    }
                },
                "tags": [
                    "predefined_attribute"
                ]
            },
            "delete": {
                "operationId": "predefined_attribute_remove",
                "description": "PredefinedAttribute(id, hidden, name, field_type)",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "NO CONTENT"
                    }
                },
                "tags": [
                    "predefined_attribute"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this predefined attribute.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/user/": {
            "get": {
                "operationId": "user_list",
                "description": "API endpoint that allows users to be viewed or edited.",
                "parameters": [
                    {
                        "name": "id",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "username",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "is_active",
                        "in": "query",
                        "description": "Boolean value meaning status of user.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "first_name",
                        "in": "query",
                        "description": "Users first name.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "last_name",
                        "in": "query",
                        "description": "Users last name.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "description": "Users e-mail value.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "id__not",
                        "in": "query",
                        "description": "A unique integer value (or comma separated list) identifying this instance.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "integer"
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "username__not",
                        "in": "query",
                        "description": "A name string value (or comma separated list) of instance.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "ordering",
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "required": false,
                        "type": "array",
                        "items": {
                            "type": "string",
                            "enum": [
                                "id",
                                "-id",
                                "username",
                                "-username",
                                "is_active",
                                "-is_active",
                                "is_staff",
                                "-is_staff",
                                "email",
                                "-email"
                            ]
                        },
                        "collectionFormat": "csv",
                        "minItems": 1,
                        "uniqueItems": true
                    },
                    {
                        "name": "__search",
                        "in": "query",
                        "description": "A search term.",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "The initial index from which to return the results.",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "required": [
                                "count",
                                "results"
                            ],
                            "type": "object",
                            "properties": {
                                "count": {
                                    "type": "integer"
                                },
                                "next": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "previous": {
                                    "type": "string",
                                    "format": "uri",
                                    "x-nullable": true
                                },
                                "results": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/definitions/User"
                                    }
                                }
                            }
                        }
                    }
                },
                "tags": [
                    "user"
                ],
                "x-subscribe-labels": [
                    "auth.User"
                ]
            },
            "post": {
                "operationId": "user_add",
                "description": "API endpoint that allows users to be viewed or edited.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": {
                            "$ref": "#/definitions/CreateUser"
                        }
                    }
                },
                "tags": [
                    "user"
                ]
            },
            "parameters": []
        },
        "/user/{id}/": {
            "get": {
                "operationId": "user_get",
                "description": "API endpoint that allows users to be viewed or edited.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OneUser"
                        }
                    }
                },
                "tags": [
                    "user"
                ],
                "x-subscribe-labels": [
                    "auth.User"
                ]
            },
            "put": {
                "operationId": "user_update",
                "description": "API endpoint that allows users to be viewed or edited.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OneUser"
                        }
                    }
                },
                "tags": [
                    "user"
                ]
            },
            "patch": {
                "operationId": "user_edit",
                "description": "API endpoint that allows users to be viewed or edited.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneUser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/OneUser"
                        }
                    }
                },
                "tags": [
                    "user"
                ]
            },
            "delete": {
                "operationId": "user_remove",
                "description": "API endpoint that allows users to be viewed or edited.",
                "parameters": [],
                "responses": {
                    "204": {
                        "description": "NO CONTENT"
                    }
                },
                "tags": [
                    "user"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/user/{id}/_settings/": {
            "get": {
                "operationId": "user__settings_get",
                "description": "API endpoint that allows users to be viewed or edited.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/_UserSettings"
                        }
                    }
                },
                "tags": [
                    "user"
                ],
                "x-subscribe-labels": [
                    "auth.User"
                ]
            },
            "put": {
                "operationId": "user__settings_update",
                "description": "API endpoint that allows users to be viewed or edited.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/_UserSettings"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/_UserSettings"
                        }
                    }
                },
                "tags": [
                    "user"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/user/{id}/change_password/": {
            "post": {
                "operationId": "user_change_password",
                "description": "API endpoint that allows users to be viewed or edited.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangePassword"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "CREATED",
                        "schema": {
                            "$ref": "#/definitions/ChangePassword"
                        }
                    }
                },
                "tags": [
                    "user"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c.",
                    "required": true,
                    "type": "integer"
                }
            ]
        },
        "/user/{id}/twofa/": {
            "get": {
                "operationId": "user_twofa_get",
                "description": "API endpoint that allows users to be viewed or edited.",
                "parameters": [],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TwoFA"
                        }
                    }
                },
                "tags": [
                    "user"
                ],
                "x-subscribe-labels": [
                    "auth.User"
                ]
            },
            "put": {
                "operationId": "user_twofa_update",
                "description": "API endpoint that allows users to be viewed or edited.",
                "parameters": [
                    {
                        "name": "data",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TwoFA"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/TwoFA"
                        }
                    }
                },
                "tags": [
                    "user"
                ]
            },
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "description": "A unique integer value identifying this \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c.",
                    "required": true,
                    "type": "integer"
                }
            ]
        }
    },
    "definitions": {
        "AllFields": {
            "required": [
                "masked",
                "uptime"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "integer",
                    "readOnly": true
                },
                "array_color": {
                    "type": "array",
                    "collectionFormat": "csv",
                    "items": {
                        "type": "string",
                        "format": "color"
                    }
                },
                "array_fk": {
                    "type": "array",
                    "collectionFormat": "csv",
                    "items": {
                        "type": "integer",
                        "format": "fk",
                        "x-options": {
                            "model": {
                                "$ref": "#/definitions/PredefinedAttribute"
                            },
                            "value_field": "id",
                            "view_field": "name",
                            "usePrefetch": true,
                            "makeLink": true
                        }
                    }
                },
                "array_string": {
                    "type": "array",
                    "collectionFormat": "csv",
                    "items": {
                        "type": "string"
                    }
                },
                "autocomplete_enum": {
                    "title": "Autocomplete enum",
                    "description": "Lorem ipsum <a href=\"/#/author\">dolor sit amet</a>, <b>consectetur</b> adipiscing elit. Integer ut lectus id mauris tincidunt sagittis non vel magna. Nullam tincidunt.",
                    "type": "string",
                    "format": "autocomplete",
                    "enum": [
                        "Author 1",
                        "Author 2"
                    ],
                    "x-nullable": true
                },
                "autocomplete_model": {
                    "title": "Autocomplete model",
                    "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus vitae dui ut ipsum feugiat varius. Duis tempor tristique augue. Vestibulum.",
                    "type": "string",
                    "format": "fk_autocomplete",
                    "x-options": {
                        "model": {
                            "$ref": "#/definitions/Author"
                        },
                        "value_field": "name",
                        "view_field": "name",
                        "usePrefetch": true
                    },
                    "x-nullable": true
                },
                "binfile": {
                    "title": "Binfile",
                    "type": "string",
                    "format": "binfile",
                    "x-nullable": true
                },
                "boolean": {
                    "title": "Boolean",
                    "type": "boolean"
                },
                "choices": {
                    "title": "Choices",
                    "type": "string",
                    "enum": [
                        "integer",
                        "boolean"
                    ],
                    "x-nullable": true
                },
                "choices_obj": {
                    "title": "Choices obj",
                    "type": "string",
                    "enum": [
                        [
                            "integer",
                            "Integer Kek"
                        ],
                        [
                            "boolean",
                            "Boolean Lol"
                        ]
                    ],
                    "x-nullable": true
                },
                "color": {
                    "title": "Color",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 1,
                    "x-nullable": true,
                    "format": "color"
                },
                "crontab": {
                    "title": "Crontab",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1,
                    "x-nullable": true,
                    "format": "crontab"
                },
                "date": {
                    "title": "Date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "date_time": {
                    "title": "Date time",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "decimal": {
                    "title": "Decimal",
                    "type": "string",
                    "format": "decimal",
                    "default": "13.37",
                    "x-options": {
                        "mask": "/^-?\\d{0,3}(\\.\\d{0,2})?$/"
                    },
                    "x-nullable": true
                },
                "dynamic_fk": {
                    "title": "Dynamic fk",
                    "type": "string",
                    "format": "dynamic_fk",
                    "x-options": {
                        "field": "fk",
                        "field_attribute": "field_type"
                    }
                },
                "dynamic": {
                    "title": "Dynamic",
                    "type": "string",
                    "format": "dynamic",
                    "x-options": {
                        "field": "choices",
                        "choices": {},
                        "types": {
                            "integer": "integer",
                            "boolean": "boolean"
                        }
                    },
                    "x-nullable": true
                },
                "email": {
                    "title": "Email",
                    "type": "string",
                    "format": "email",
                    "maxLength": 254,
                    "x-nullable": true
                },
                "file": {
                    "title": "File",
                    "type": "string",
                    "format": "file",
                    "x-nullable": true
                },
                "fk": {
                    "title": "Fk",
                    "type": "integer",
                    "format": "fk",
                    "x-options": {
                        "model": {
                            "$ref": "#/definitions/PredefinedAttribute"
                        },
                        "value_field": "id",
                        "view_field": "name",
                        "usePrefetch": true,
                        "makeLink": true,
                        "dependence": null,
                        "filters": null
                    },
                    "x-nullable": true
                },
                "fk_in_char": {
                    "title": "Fk in char",
                    "type": "integer",
                    "format": "fk",
                    "x-options": {
                        "model": {
                            "$ref": "#/definitions/Author"
                        },
                        "value_field": "id",
                        "view_field": "name",
                        "usePrefetch": true,
                        "makeLink": true,
                        "dependence": null,
                        "filters": null
                    },
                    "x-nullable": true
                },
                "fk_with_filters": {
                    "title": "Fk with filters",
                    "type": "integer",
                    "format": "fk",
                    "x-options": {
                        "model": {
                            "$ref": "#/definitions/Post"
                        },
                        "value_field": "id",
                        "view_field": "title",
                        "usePrefetch": true,
                        "makeLink": true,
                        "dependence": {
                            "integer": "id"
                        },
                        "filters": {
                            "category": "1",
                            "title": "123"
                        }
                    },
                    "x-nullable": true
                },
                "float": {
                    "title": "Float",
                    "type": "number",
                    "x-nullable": true
                },
                "html": {
                    "title": "Html",
                    "type": "string",
                    "format": "html"
                },
                "integer": {
                    "title": "Integer",
                    "type": "integer",
                    "x-nullable": true
                },
                "json": {
                    "title": "Json",
                    "type": "string",
                    "format": "json",
                    "default": "{}"
                },
                "masked": {
                    "title": "Masked",
                    "type": "string",
                    "format": "masked",
                    "x-options": {
                        "mask": "000-000"
                    }
                },
                "multiplenamedbinfile": {
                    "title": "Multiplenamedbinfile",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "content": {
                                "type": "string"
                            },
                            "mediaType": {
                                "type": "string"
                            }
                        },
                        "x-format": "namedbinfile"
                    }
                },
                "multiplenamedbinimage": {
                    "title": "Multiplenamedbinimage",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "content": {
                                "type": "string"
                            },
                            "mediaType": {
                                "type": "string"
                            }
                        },
                        "x-format": "namedbinimage",
                        "x-validators": {}
                    }
                },
                "multiplenamedbinimage_validation": {
                    "title": "Multiplenamedbinimage validation",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "content": {
                                "type": "string"
                            },
                            "mediaType": {
                                "type": "string"
                            }
                        },
                        "x-format": "namedbinimage",
                        "x-validators": {
                            "extensions": [
                                "image/x-ms-bmp",
                                "image/jpeg",
                                "image/png"
                            ],
                            "min_height": 200,
                            "max_height": 400,
                            "min_width": 400,
                            "max_width": 800
                        }
                    }
                },
                "multiselect_model": {
                    "title": "Multiselect model",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "fk",
                        "x-options": {
                            "model": {
                                "$ref": "#/definitions/Author"
                            },
                            "value_field": "name",
                            "view_field": "name",
                            "usePrefetch": false,
                            "makeLink": true,
                            "dependence": null
                        }
                    },
                    "x-collectionFormat": "csv",
                    "x-options": {
                        "viewSeparator": ","
                    },
                    "x-nullable": true
                },
                "namedbinfile": {
                    "title": "Namedbinfile",
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "content": {
                            "type": "string"
                        },
                        "mediaType": {
                            "type": "string"
                        }
                    },
                    "x-format": "namedbinfile",
                    "x-nullable": true
                },
                "namedbinimage": {
                    "title": "Namedbinimage",
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "content": {
                            "type": "string"
                        },
                        "mediaType": {
                            "type": "string"
                        }
                    },
                    "x-format": "namedbinimage",
                    "x-validators": {},
                    "x-nullable": true
                },
                "namedbinimage_validation": {
                    "title": "Namedbinimage validation",
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "content": {
                            "type": "string"
                        },
                        "mediaType": {
                            "type": "string"
                        }
                    },
                    "x-format": "namedbinimage",
                    "x-validators": {
                        "extensions": [
                            "image/x-ms-bmp",
                            "image/jpeg",
                            "image/png"
                        ],
                        "min_height": 200,
                        "max_height": 400,
                        "min_width": 400,
                        "max_width": 800
                    },
                    "x-nullable": true
                },
                "password": {
                    "title": "Password",
                    "type": "string",
                    "format": "password",
                    "x-nullable": true
                },
                "phone": {
                    "title": "Phone",
                    "type": "string",
                    "format": "phone",
                    "x-nullable": true
                },
                "qrcode": {
                    "title": "Qrcode",
                    "type": "string",
                    "maxLength": 255,
                    "format": "qrcode"
                },
                "rating_stars": {
                    "title": "Rating stars",
                    "type": "number",
                    "format": "rating",
                    "x-options": {
                        "min_value": 0,
                        "max_value": 5,
                        "step": 1,
                        "style": "stars",
                        "color": "green",
                        "fa_class": null
                    },
                    "x-nullable": true
                },
                "rating_slider": {
                    "title": "Rating slider",
                    "type": "number",
                    "format": "rating",
                    "x-options": {
                        "min_value": 0,
                        "max_value": 5,
                        "step": 0.3,
                        "style": "slider",
                        "color": "orange",
                        "fa_class": null
                    }
                },
                "rating_icon": {
                    "title": "Rating icon",
                    "type": "number",
                    "format": "rating",
                    "x-options": {
                        "min_value": 0,
                        "max_value": 5,
                        "step": 1,
                        "style": "fa_icon",
                        "color": "DeepPink",
                        "fa_class": "fas fa-poo-storm"
                    }
                },
                "secretfile": {
                    "title": "Secretfile",
                    "type": "string",
                    "format": "secretfile",
                    "x-nullable": true
                },
                "textarea": {
                    "title": "Textarea",
                    "type": "string",
                    "format": "textarea",
                    "default": ""
                },
                "uptime": {
                    "title": "Uptime",
                    "type": "integer",
                    "format": "uptime",
                    "x-nullable": true
                },
                "file_as_file": {
                    "title": "File as file",
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "content": {
                            "type": "string"
                        },
                        "mediaType": {
                            "type": "string"
                        }
                    },
                    "x-format": "namedbinfile",
                    "x-nullable": true
                },
                "image_as_file": {
                    "title": "Image as file",
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "content": {
                            "type": "string"
                        },
                        "mediaType": {
                            "type": "string"
                        }
                    },
                    "x-format": "namedbinimage",
                    "x-validators": {},
                    "x-nullable": true
                },
                "smart_named_file": {
                    "title": "Smart named file",
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "content": {
                            "type": "string"
                        },
                        "mediaType": {
                            "type": "string"
                        }
                    },
                    "x-format": "namedbinfile",
                    "x-nullable": true
                },
                "smart_named_image": {
                    "title": "Smart named image",
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "content": {
                            "type": "string"
                        },
                        "mediaType": {
                            "type": "string"
                        }
                    },
                    "x-format": "namedbinimage",
                    "x-validators": {},
                    "x-nullable": true
                },
                "smart_multiple_field": {
                    "title": "Smart multiple field",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "content": {
                                "type": "string"
                            },
                            "mediaType": {
                                "type": "string"
                            }
                        },
                        "x-format": "namedbinfile"
                    },
                    "x-nullable": true
                },
                "smart_multiple_image": {
                    "title": "Smart multiple image",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "content": {
                                "type": "string"
                            },
                            "mediaType": {
                                "type": "string"
                            }
                        },
                        "x-format": "namedbinimage",
                        "x-validators": {}
                    },
                    "x-nullable": true
                },
                "smart_fk_field": {
                    "title": "Smart fk field",
                    "type": "integer",
                    "format": "fk",
                    "x-options": {
                        "model": {
                            "$ref": "#/definitions/Category"
                        },
                        "value_field": "id",
                        "view_field": "name",
                        "usePrefetch": true,
                        "makeLink": true,
                        "dependence": null,
                        "filters": null
                    },
                    "x-nullable": true
                },
                "multiple_files": {
                    "title": "Multiple files",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "content": {
                                "type": "string"
                            },
                            "mediaType": {
                                "type": "string"
                            }
                        },
                        "x-format": "namedbinfile"
                    },
                    "x-nullable": true
                },
                "multiple_images_files": {
                    "title": "Multiple images files",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "content": {
                                "type": "string"
                            },
                            "mediaType": {
                                "type": "string"
                            }
                        },
                        "x-format": "namedbinimage",
                        "x-validators": {}
                    },
                    "x-nullable": true
                }
            },
            "x-properties-groups": {
                "": [
                    "id",
                    "array_color",
                    "array_fk",
                    "array_string",
                    "autocomplete_enum",
                    "autocomplete_model",
                    "binfile",
                    "boolean",
                    "choices",
                    "choices_obj",
                    "color",
                    "crontab",
                    "date",
                    "date_time",
                    "decimal",
                    "dynamic_fk",
                    "dynamic",
                    "email",
                    "file",
                    "fk",
                    "fk_in_char",
                    "fk_with_filters",
                    "float",
                    "html",
                    "integer",
                    "json",
                    "masked",
                    "multiplenamedbinfile",
                    "multiplenamedbinimage",
                    "multiplenamedbinimage_validation",
                    "multiselect_model",
                    "namedbinfile",
                    "namedbinimage",
                    "namedbinimage_validation",
                    "password",
                    "phone",
                    "qrcode",
                    "rating_stars",
                    "rating_slider",
                    "rating_icon",
                    "secretfile",
                    "textarea",
                    "uptime",
                    "file_as_file",
                    "image_as_file",
                    "smart_named_file",
                    "smart_named_image",
                    "smart_multiple_field",
                    "smart_multiple_image",
                    "smart_fk_field",
                    "multiple_files",
                    "multiple_images_files"
                ]
            },
            "x-view-field-name": "color"
        },
        "OneAllFields": {
            "required": [
                "masked",
                "uptime"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "integer",
                    "readOnly": true
                },
                "array_color": {
                    "type": "array",
                    "collectionFormat": "csv",
                    "items": {
                        "type": "string",
                        "format": "color"
                    }
                },
                "array_fk": {
                    "type": "array",
                    "collectionFormat": "csv",
                    "items": {
                        "type": "integer",
                        "format": "fk",
                        "x-options": {
                            "model": {
                                "$ref": "#/definitions/PredefinedAttribute"
                            },
                            "value_field": "id",
                            "view_field": "name",
                            "usePrefetch": true,
                            "makeLink": true
                        }
                    }
                },
                "array_string": {
                    "type": "array",
                    "collectionFormat": "csv",
                    "items": {
                        "type": "string"
                    }
                },
                "autocomplete_enum": {
                    "title": "Autocomplete enum",
                    "description": "Lorem ipsum <a href=\"/#/author\">dolor sit amet</a>, <b>consectetur</b> adipiscing elit. Integer ut lectus id mauris tincidunt sagittis non vel magna. Nullam tincidunt.",
                    "type": "string",
                    "format": "autocomplete",
                    "enum": [
                        "Author 1",
                        "Author 2"
                    ],
                    "x-nullable": true
                },
                "autocomplete_model": {
                    "title": "Autocomplete model",
                    "description": "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vivamus vitae dui ut ipsum feugiat varius. Duis tempor tristique augue. Vestibulum.",
                    "type": "string",
                    "format": "fk_autocomplete",
                    "x-options": {
                        "model": {
                            "$ref": "#/definitions/Author"
                        },
                        "value_field": "name",
                        "view_field": "name",
                        "usePrefetch": true
                    },
                    "x-nullable": true
                },
                "binfile": {
                    "title": "Binfile",
                    "type": "string",
                    "format": "binfile",
                    "x-nullable": true
                },
                "boolean": {
                    "title": "Boolean",
                    "type": "boolean"
                },
                "choices": {
                    "title": "Choices",
                    "type": "string",
                    "enum": [
                        "integer",
                        "boolean"
                    ],
                    "x-nullable": true
                },
                "choices_obj": {
                    "title": "Choices obj",
                    "type": "string",
                    "enum": [
                        [
                            "integer",
                            "Integer Kek"
                        ],
                        [
                            "boolean",
                            "Boolean Lol"
                        ]
                    ],
                    "x-nullable": true
                },
                "color": {
                    "title": "Color",
                    "type": "string",
                    "maxLength": 20,
                    "minLength": 1,
                    "x-nullable": true,
                    "format": "color"
                },
                "crontab": {
                    "title": "Crontab",
                    "type": "string",
                    "maxLength": 30,
                    "minLength": 1,
                    "x-nullable": true,
                    "format": "crontab"
                },
                "date": {
                    "title": "Date",
                    "type": "string",
                    "format": "date",
                    "x-nullable": true
                },
                "date_time": {
                    "title": "Date time",
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "decimal": {
                    "title": "Decimal",
                    "type": "string",
                    "format": "decimal",
                    "default": "13.37",
                    "x-options": {
                        "mask": "/^-?\\d{0,3}(\\.\\d{0,2})?$/"
                    },
                    "x-nullable": true
                },
                "dynamic_fk": {
                    "title": "Dynamic fk",
                    "type": "string",
                    "format": "dynamic_fk",
                    "x-options": {
                        "field": "fk",
                        "field_attribute": "field_type"
                    }
                },
                "dynamic": {
                    "title": "Dynamic",
                    "type": "string",
                    "format": "dynamic",
                    "x-options": {
                        "field": "choices",
                        "choices": {},
                        "types": {
                            "integer": "integer",
                            "boolean": "boolean"
                        }
                    },
                    "x-nullable": true
                },
                "email": {
                    "title": "Email",
                    "type": "string",
                    "format": "email",
                    "maxLength": 254,
                    "x-nullable": true
                },
                "file": {
                    "title": "File",
                    "type": "string",
                    "format": "file",
                    "x-nullable": true
                },
                "fk": {
                    "title": "Fk",
                    "type": "integer",
                    "format": "fk",
                    "x-options": {
                        "model": {
                            "$ref": "#/definitions/PredefinedAttribute"
                        },
                        "value_field": "id",
                        "view_field": "name",
                        "usePrefetch": true,
                        "makeLink": true,
                        "dependence": null,
                        "filters": null
                    },
                    "x-nullable": true
                },
                "fk_in_char": {
                    "title": "Fk in char",
                    "type": "integer",
                    "format": "fk",
                    "x-options": {
                        "model": {
                            "$ref": "#/definitions/Author"
                        },
                        "value_field": "id",
                        "view_field": "name",
                        "usePrefetch": true,
                        "makeLink": true,
                        "dependence": null,
                        "filters": null
                    },
                    "x-nullable": true
                },
                "fk_with_filters": {
                    "title": "Fk with filters",
                    "type": "integer",
                    "format": "fk",
                    "x-options": {
                        "model": {
                            "$ref": "#/definitions/Post"
                        },
                        "value_field": "id",
                        "view_field": "title",
                        "usePrefetch": true,
                        "makeLink": true,
                        "dependence": {
                            "integer": "id"
                        },
                        "filters": {
                            "category": "1",
                            "title": "123"
                        }
                    },
                    "x-nullable": true
                },
                "float": {
                    "title": "Float",
                    "type": "number",
                    "x-nullable": true
                },
                "html": {
                    "title": "Html",
                    "type": "string",
                    "format": "html"
                },
                "integer": {
                    "title": "Integer",
                    "type": "integer",
                    "x-nullable": true
                },
                "json": {
                    "title": "Json",
                    "type": "string",
                    "format": "json",
                    "default": "{}"
                },
                "masked": {
                    "title": "Masked",
                    "type": "string",
                    "format": "masked",
                    "x-options": {
                        "mask": "000-000"
                    }
                },
                "multiplenamedbinfile": {
                    "title": "Multiplenamedbinfile",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "content": {
                                "type": "string"
                            },
                            "mediaType": {
                                "type": "string"
                            }
                        },
                        "x-format": "namedbinfile"
                    }
                },
                "multiplenamedbinimage": {
                    "title": "Multiplenamedbinimage",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "content": {
                                "type": "string"
                            },
                            "mediaType": {
                                "type": "string"
                            }
                        },
                        "x-format": "namedbinimage",
                        "x-validators": {}
                    }
                },
                "multiplenamedbinimage_validation": {
                    "title": "Multiplenamedbinimage validation",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "content": {
                                "type": "string"
                            },
                            "mediaType": {
                                "type": "string"
                            }
                        },
                        "x-format": "namedbinimage",
                        "x-validators": {
                            "extensions": [
                                "image/x-ms-bmp",
                                "image/jpeg",
                                "image/png"
                            ],
                            "min_height": 200,
                            "max_height": 400,
                            "min_width": 400,
                            "max_width": 800
                        }
                    }
                },
                "multiselect_model": {
                    "title": "Multiselect model",
                    "type": "array",
                    "items": {
                        "type": "integer",
                        "format": "fk",
                        "x-options": {
                            "model": {
                                "$ref": "#/definitions/Author"
                            },
                            "value_field": "name",
                            "view_field": "name",
                            "usePrefetch": false,
                            "makeLink": true,
                            "dependence": null
                        }
                    },
                    "x-collectionFormat": "csv",
                    "x-options": {
                        "viewSeparator": ","
                    },
                    "x-nullable": true
                },
                "namedbinfile": {
                    "title": "Namedbinfile",
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "content": {
                            "type": "string"
                        },
                        "mediaType": {
                            "type": "string"
                        }
                    },
                    "x-format": "namedbinfile",
                    "x-nullable": true
                },
                "namedbinimage": {
                    "title": "Namedbinimage",
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "content": {
                            "type": "string"
                        },
                        "mediaType": {
                            "type": "string"
                        }
                    },
                    "x-format": "namedbinimage",
                    "x-validators": {},
                    "x-nullable": true
                },
                "namedbinimage_validation": {
                    "title": "Namedbinimage validation",
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "content": {
                            "type": "string"
                        },
                        "mediaType": {
                            "type": "string"
                        }
                    },
                    "x-format": "namedbinimage",
                    "x-validators": {
                        "extensions": [
                            "image/x-ms-bmp",
                            "image/jpeg",
                            "image/png"
                        ],
                        "min_height": 200,
                        "max_height": 400,
                        "min_width": 400,
                        "max_width": 800
                    },
                    "x-nullable": true
                },
                "password": {
                    "title": "Password",
                    "type": "string",
                    "format": "password",
                    "x-nullable": true
                },
                "phone": {
                    "title": "Phone",
                    "type": "string",
                    "format": "phone",
                    "x-nullable": true
                },
                "qrcode": {
                    "title": "Qrcode",
                    "type": "string",
                    "maxLength": 255,
                    "format": "qrcode"
                },
                "rating_stars": {
                    "title": "Rating stars",
                    "type": "number",
                    "format": "rating",
                    "x-options": {
                        "min_value": 0,
                        "max_value": 5,
                        "step": 1,
                        "style": "stars",
                        "color": "green",
                        "fa_class": null
                    },
                    "x-nullable": true
                },
                "rating_slider": {
                    "title": "Rating slider",
                    "type": "number",
                    "format": "rating",
                    "x-options": {
                        "min_value": 0,
                        "max_value": 5,
                        "step": 0.3,
                        "style": "slider",
                        "color": "orange",
                        "fa_class": null
                    }
                },
                "rating_icon": {
                    "title": "Rating icon",
                    "type": "number",
                    "format": "rating",
                    "x-options": {
                        "min_value": 0,
                        "max_value": 5,
                        "step": 1,
                        "style": "fa_icon",
                        "color": "DeepPink",
                        "fa_class": "fas fa-poo-storm"
                    }
                },
                "secretfile": {
                    "title": "Secretfile",
                    "type": "string",
                    "format": "secretfile",
                    "x-nullable": true
                },
                "textarea": {
                    "title": "Textarea",
                    "type": "string",
                    "format": "textarea",
                    "default": ""
                },
                "uptime": {
                    "title": "Uptime",
                    "type": "integer",
                    "format": "uptime",
                    "x-nullable": true
                },
                "file_as_file": {
                    "title": "File as file",
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "content": {
                            "type": "string"
                        },
                        "mediaType": {
                            "type": "string"
                        }
                    },
                    "x-format": "namedbinfile",
                    "x-nullable": true
                },
                "image_as_file": {
                    "title": "Image as file",
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "content": {
                            "type": "string"
                        },
                        "mediaType": {
                            "type": "string"
                        }
                    },
                    "x-format": "namedbinimage",
                    "x-validators": {},
                    "x-nullable": true
                },
                "smart_named_file": {
                    "title": "Smart named file",
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "content": {
                            "type": "string"
                        },
                        "mediaType": {
                            "type": "string"
                        }
                    },
                    "x-format": "namedbinfile",
                    "x-nullable": true
                },
                "smart_named_image": {
                    "title": "Smart named image",
                    "type": "object",
                    "properties": {
                        "name": {
                            "type": "string"
                        },
                        "content": {
                            "type": "string"
                        },
                        "mediaType": {
                            "type": "string"
                        }
                    },
                    "x-format": "namedbinimage",
                    "x-validators": {},
                    "x-nullable": true
                },
                "smart_multiple_field": {
                    "title": "Smart multiple field",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "content": {
                                "type": "string"
                            },
                            "mediaType": {
                                "type": "string"
                            }
                        },
                        "x-format": "namedbinfile"
                    },
                    "x-nullable": true
                },
                "smart_multiple_image": {
                    "title": "Smart multiple image",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "content": {
                                "type": "string"
                            },
                            "mediaType": {
                                "type": "string"
                            }
                        },
                        "x-format": "namedbinimage",
                        "x-validators": {}
                    },
                    "x-nullable": true
                },
                "smart_fk_field": {
                    "title": "Smart fk field",
                    "type": "integer",
                    "format": "fk",
                    "x-options": {
                        "model": {
                            "$ref": "#/definitions/Category"
                        },
                        "value_field": "id",
                        "view_field": "name",
                        "usePrefetch": true,
                        "makeLink": true,
                        "dependence": null,
                        "filters": null
                    },
                    "x-nullable": true
                },
                "multiple_files": {
                    "title": "Multiple files",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "content": {
                                "type": "string"
                            },
                            "mediaType": {
                                "type": "string"
                            }
                        },
                        "x-format": "namedbinfile"
                    },
                    "x-nullable": true
                },
                "multiple_images_files": {
                    "title": "Multiple images files",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "name": {
                                "type": "string"
                            },
                            "content": {
                                "type": "string"
                            },
                            "mediaType": {
                                "type": "string"
                            }
                        },
                        "x-format": "namedbinimage",
                        "x-validators": {}
                    },
                    "x-nullable": true
                }
            },
            "x-properties-groups": {
                "": [
                    "id",
                    "array_color",
                    "array_fk",
                    "array_string",
                    "autocomplete_enum",
                    "autocomplete_model",
                    "binfile",
                    "boolean",
                    "choices",
                    "choices_obj",
                    "color",
                    "crontab",
                    "date",
                    "date_time",
                    "decimal",
                    "dynamic_fk",
                    "dynamic",
                    "email",
                    "file",
                    "fk",
                    "fk_in_char",
                    "fk_with_filters",
                    "float",
                    "html",
                    "integer",
                    "json",
                    "masked",
                    "multiplenamedbinfile",
                    "multiplenamedbinimage",
                    "multiplenamedbinimage_validation",
                    "multiselect_model",
                    "namedbinfile",
                    "namedbinimage",
                    "namedbinimage_validation",
                    "password",
                    "phone",
                    "qrcode",
                    "rating_stars",
                    "rating_slider",
                    "rating_icon",
                    "secretfile",
                    "textarea",
                    "uptime",
                    "file_as_file",
                    "image_as_file",
                    "smart_named_file",
                    "smart_named_image",
                    "smart_multiple_field",
                    "smart_multiple_image",
                    "smart_fk_field",
                    "multiple_files",
                    "multiple_images_files"
                ]
            },
            "x-view-field-name": "color"
        },
        "Author": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "description": "Default serializer",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "posts": {
                    "title": "Posts",
                    "type": "array",
                    "items": {
                        "required": [
                            "category"
                        ],
                        "type": "object",
                        "properties": {
                            "title": {
                                "title": "Title",
                                "type": "string",
                                "default": "Title",
                                "minLength": 1
                            },
                            "type": {
                                "title": "Type",
                                "type": "string",
                                "default": "Type",
                                "minLength": 1
                            },
                            "category": {
                                "title": "Category",
                                "type": "integer",
                                "format": "fk",
                                "x-options": {
                                    "model": {
                                        "$ref": "#/definitions/Category"
                                    },
                                    "value_field": "id",
                                    "view_field": "name",
                                    "usePrefetch": true,
                                    "makeLink": true,
                                    "dependence": null,
                                    "filters": null
                                }
                            }
                        },
                        "readOnly": true
                    },
                    "readOnly": true,
                    "x-format": "list"
                },
                "register_date": {
                    "title": "Register date",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "default": "2021-09-24T02:05:02.997331Z"
                }
            },
            "x-properties-groups": {
                "": [
                    "id",
                    "name",
                    "posts",
                    "register_date"
                ]
            },
            "x-view-field-name": "name",
            "x-non-bulk-methods": [
                "post",
                "delete"
            ]
        },
        "OneAuthor": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "description": "Default serializer",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "posts": {
                    "title": "Posts",
                    "type": "array",
                    "items": {
                        "required": [
                            "category"
                        ],
                        "type": "object",
                        "properties": {
                            "title": {
                                "title": "Title",
                                "type": "string",
                                "default": "Title",
                                "minLength": 1
                            },
                            "type": {
                                "title": "Type",
                                "type": "string",
                                "default": "Type",
                                "minLength": 1
                            },
                            "category": {
                                "title": "Category",
                                "type": "integer",
                                "format": "fk",
                                "x-options": {
                                    "model": {
                                        "$ref": "#/definitions/Category"
                                    },
                                    "value_field": "id",
                                    "view_field": "name",
                                    "usePrefetch": true,
                                    "makeLink": true,
                                    "dependence": null,
                                    "filters": null
                                }
                            }
                        },
                        "readOnly": true
                    },
                    "readOnly": true,
                    "x-format": "list"
                },
                "register_date": {
                    "title": "Register date",
                    "type": "string",
                    "format": "date-time",
                    "readOnly": true,
                    "default": "2021-09-24T02:05:02.999370Z"
                }
            },
            "x-properties-groups": {
                "": [
                    "id",
                    "name",
                    "posts",
                    "register_date"
                ]
            },
            "x-view-field-name": "name",
            "x-non-bulk-methods": [
                "post",
                "delete"
            ]
        },
        "SubView": {
            "type": "object",
            "properties": {
                "item_name": {
                    "title": "Item name",
                    "type": "string",
                    "default": "No name",
                    "minLength": 1
                },
                "item_value": {
                    "title": "Item value",
                    "type": "string",
                    "default": "No value",
                    "minLength": 1
                }
            },
            "x-properties-groups": {
                "": [
                    "item_name",
                    "item_value"
                ]
            },
            "x-view-field-name": "item_value",
            "x-non-bulk-methods": [
                "get"
            ]
        },
        "AuthorUpdate": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "description": "Update serializer",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                }
            },
            "x-properties-groups": {
                "": [
                    "id",
                    "name"
                ]
            },
            "x-view-field-name": "name"
        },
        "Post": {
            "required": [
                "author",
                "category",
                "title"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "integer",
                    "readOnly": true
                },
                "author": {
                    "title": "Author",
                    "type": "integer",
                    "format": "fk",
                    "x-options": {
                        "model": {
                            "$ref": "#/definitions/Author"
                        },
                        "value_field": "id",
                        "view_field": "name",
                        "usePrefetch": true,
                        "makeLink": true,
                        "dependence": null,
                        "filters": null
                    }
                },
                "category": {
                    "title": "Category",
                    "type": "integer",
                    "format": "fk",
                    "x-options": {
                        "model": {
                            "$ref": "#/definitions/Category"
                        },
                        "value_field": "id",
                        "view_field": "name",
                        "usePrefetch": true,
                        "makeLink": true,
                        "dependence": null,
                        "filters": null
                    },
                    "x-nullable": true
                },
                "title": {
                    "title": "Title",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            },
            "x-properties-groups": {
                "Main": [
                    "author",
                    "title",
                    "type",
                    "category"
                ],
                "Content": [
                    "text"
                ],
                "": [
                    "id"
                ]
            },
            "x-view-field-name": "title"
        },
        "OnePost": {
            "required": [
                "author",
                "title",
                "text",
                "category",
                "type"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "integer",
                    "readOnly": true
                },
                "author": {
                    "title": "Author",
                    "type": "integer",
                    "format": "fk",
                    "x-options": {
                        "model": {
                            "$ref": "#/definitions/Author"
                        },
                        "value_field": "id",
                        "view_field": "name",
                        "usePrefetch": true,
                        "makeLink": true,
                        "dependence": null,
                        "filters": null
                    }
                },
                "title": {
                    "title": "Title",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "text": {
                    "title": "Text",
                    "type": "string",
                    "format": "textarea"
                },
                "category": {
                    "title": "Category",
                    "type": "integer",
                    "format": "fk",
                    "x-options": {
                        "model": {
                            "$ref": "#/definitions/Category"
                        },
                        "value_field": "id",
                        "view_field": "name",
                        "usePrefetch": true,
                        "makeLink": true,
                        "dependence": null,
                        "filters": null
                    },
                    "x-nullable": true
                },
                "type": {
                    "title": "Type",
                    "type": "string",
                    "format": "fk_autocomplete",
                    "x-options": {
                        "model": {
                            "$ref": "#/definitions/PredefinedPostType"
                        },
                        "value_field": "name",
                        "view_field": "name",
                        "usePrefetch": true
                    }
                }
            },
            "x-properties-groups": {
                "Main": [
                    "author",
                    "title",
                    "type",
                    "category"
                ],
                "Content": [
                    "text"
                ],
                "": [
                    "id"
                ]
            },
            "x-view-field-name": "title"
        },
        "ArchiveAllResult": {
            "type": "object",
            "properties": {
                "author_id": {
                    "title": "Author id",
                    "type": "integer",
                    "readOnly": true,
                    "x-options": {
                        "redirect": {
                            "operation_name": "author_id",
                            "depend_field": null,
                            "concat_field_name": false
                        }
                    }
                }
            },
            "x-properties-groups": {
                "": [
                    "author_id"
                ]
            },
            "x-view-field-name": "author_id"
        },
        "Empty": {
            "type": "object",
            "properties": {},
            "x-properties-groups": {
                "": []
            },
            "x-view-field-name": null
        },
        "ChangeTitle": {
            "required": [
                "title"
            ],
            "type": "object",
            "properties": {
                "title": {
                    "title": "Title",
                    "type": "string",
                    "minLength": 1
                }
            },
            "x-properties-groups": {
                "": [
                    "title"
                ]
            },
            "x-view-field-name": "title"
        },
        "ChangeTitleResult": {
            "type": "object",
            "properties": {
                "new_title": {
                    "title": "New title",
                    "type": "string",
                    "readOnly": true,
                    "minLength": 1
                },
                "author_id": {
                    "title": "Author id",
                    "type": "integer",
                    "readOnly": true,
                    "x-options": {
                        "redirect": {
                            "operation_name": "author_id",
                            "depend_field": null,
                            "concat_field_name": false
                        }
                    }
                }
            },
            "x-properties-groups": {
                "": [
                    "new_title",
                    "author_id"
                ]
            },
            "x-view-field-name": "author_id"
        },
        "PostMeta": {
            "required": [
                "key",
                "value"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "integer",
                    "readOnly": true
                },
                "key": {
                    "title": "Key",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                },
                "value": {
                    "title": "Value",
                    "type": "string",
                    "maxLength": 255,
                    "minLength": 1
                }
            },
            "x-properties-groups": {
                "": [
                    "id",
                    "key",
                    "value"
                ]
            },
            "x-view-field-name": "key"
        },
        "OnePostMeta": {
            "required": [
                "key",
                "value"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "integer",
                    "readOnly": true
                },
                "key": {
                    "title": "Key",
                    "type": "string",
                    "enum": [
                        "meta_title",
                        "some_boolean"
                    ]
                },
                "value": {
                    "title": "Value",
                    "type": "string",
                    "format": "dynamic",
                    "x-options": {
                        "field": "key",
                        "choices": {},
                        "types": {
                            "meta_title": "string",
                            "some_boolean": "boolean"
                        }
                    }
                }
            },
            "x-properties-groups": {
                "": [
                    "id",
                    "key",
                    "value"
                ]
            },
            "x-view-field-name": "key"
        },
        "Category": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                }
            },
            "x-properties-groups": {
                "": [
                    "id",
                    "name"
                ]
            },
            "x-view-field-name": "name"
        },
        "OneCategory": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                }
            },
            "x-properties-groups": {
                "": [
                    "id",
                    "name"
                ]
            },
            "x-view-field-name": "name"
        },
        "ChangeName": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "name": {
                    "title": "Name",
                    "type": "string",
                    "minLength": 1
                }
            },
            "x-properties-groups": {
                "": [
                    "name"
                ]
            },
            "x-view-field-name": "name"
        },
        "HideNotRequired": {
            "required": [
                "required_1",
                "required_2"
            ],
            "type": "object",
            "properties": {
                "required_1": {
                    "title": "Required 1",
                    "type": "string",
                    "minLength": 1
                },
                "required_2": {
                    "title": "Required 2",
                    "type": "string",
                    "minLength": 1
                },
                "not_required_1": {
                    "title": "Not required 1",
                    "type": "string",
                    "minLength": 1
                },
                "not_required_2": {
                    "title": "Not required 2",
                    "type": "string",
                    "minLength": 1
                },
                "not_required_3": {
                    "title": "Not required 3",
                    "type": "string",
                    "minLength": 1
                }
            },
            "x-properties-groups": {
                "Additional group 1": [
                    "not_required_1"
                ],
                "Additional group 2": [
                    "not_required_2"
                ],
                "": [
                    "required_1",
                    "required_2",
                    "not_required_3"
                ]
            },
            "x-view-field-name": "required_2"
        },
        "PredefinedPostType": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                }
            },
            "x-properties-groups": {
                "": [
                    "id",
                    "name"
                ]
            },
            "x-view-field-name": "name"
        },
        "OnePredefinedPostType": {
            "required": [
                "name"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 1
                }
            },
            "x-properties-groups": {
                "": [
                    "id",
                    "name"
                ]
            },
            "x-view-field-name": "name"
        },
        "PredefinedAttribute": {
            "required": [
                "name",
                "field_type"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "field_type": {
                    "title": "Field type",
                    "type": "string",
                    "enum": [
                        "integer",
                        "boolean"
                    ]
                }
            },
            "x-properties-groups": {
                "": [
                    "id",
                    "name",
                    "field_type"
                ]
            },
            "x-view-field-name": "name",
            "x-translate-model": "OnePredefinedAttribute"
        },
        "OnePredefinedAttribute": {
            "required": [
                "name",
                "field_type"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "Id",
                    "type": "integer",
                    "readOnly": true
                },
                "name": {
                    "title": "Name",
                    "type": "string",
                    "maxLength": 256,
                    "minLength": 1
                },
                "field_type": {
                    "title": "Field type",
                    "type": "string",
                    "enum": [
                        "integer",
                        "boolean"
                    ]
                }
            },
            "x-properties-groups": {
                "": [
                    "id",
                    "name",
                    "field_type"
                ]
            },
            "x-view-field-name": "name",
            "x-translate-model": "OnePredefinedAttribute"
        },
        "User": {
            "required": [
                "username"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "username": {
                    "title": "\u0418\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
                    "description": "\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u043f\u043e\u043b\u0435. \u041d\u0435 \u0431\u043e\u043b\u0435\u0435 150 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432. \u0422\u043e\u043b\u044c\u043a\u043e \u0431\u0443\u043a\u0432\u044b, \u0446\u0438\u0444\u0440\u044b \u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b @/./+/-/_.",
                    "type": "string",
                    "pattern": "^[\\w.@+-]+$",
                    "maxLength": 150,
                    "minLength": 1
                },
                "is_active": {
                    "title": "Is active",
                    "type": "boolean",
                    "default": true
                },
                "is_staff": {
                    "title": "Is staff",
                    "type": "boolean",
                    "default": false
                },
                "email": {
                    "title": "Email",
                    "type": "string",
                    "format": "email",
                    "minLength": 1
                }
            },
            "x-properties-groups": {
                "": [
                    "id",
                    "username",
                    "is_active",
                    "is_staff",
                    "email"
                ]
            },
            "x-view-field-name": "username"
        },
        "CreateUser": {
            "required": [
                "username",
                "password",
                "password2"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "username": {
                    "title": "\u0418\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
                    "description": "\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u043f\u043e\u043b\u0435. \u041d\u0435 \u0431\u043e\u043b\u0435\u0435 150 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432. \u0422\u043e\u043b\u044c\u043a\u043e \u0431\u0443\u043a\u0432\u044b, \u0446\u0438\u0444\u0440\u044b \u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b @/./+/-/_.",
                    "type": "string",
                    "pattern": "^[\\w.@+-]+$",
                    "maxLength": 150,
                    "minLength": 1
                },
                "is_active": {
                    "title": "Is active",
                    "type": "boolean",
                    "default": true
                },
                "is_staff": {
                    "title": "Is staff",
                    "type": "boolean",
                    "default": false
                },
                "first_name": {
                    "title": "\u0418\u043c\u044f",
                    "type": "string",
                    "maxLength": 150
                },
                "last_name": {
                    "title": "\u0424\u0430\u043c\u0438\u043b\u0438\u044f",
                    "type": "string",
                    "maxLength": 150
                },
                "email": {
                    "title": "Email",
                    "type": "string",
                    "format": "email",
                    "minLength": 1
                },
                "password": {
                    "title": "Password",
                    "type": "string",
                    "minLength": 1
                },
                "password2": {
                    "title": "Repeat password",
                    "type": "string",
                    "minLength": 1
                }
            },
            "x-properties-groups": {
                "": [
                    "id",
                    "username",
                    "is_active",
                    "is_staff",
                    "first_name",
                    "last_name",
                    "email",
                    "password",
                    "password2"
                ]
            },
            "x-view-field-name": "username"
        },
        "OneUser": {
            "required": [
                "username"
            ],
            "type": "object",
            "properties": {
                "id": {
                    "title": "ID",
                    "type": "integer",
                    "readOnly": true
                },
                "username": {
                    "title": "\u0418\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f",
                    "description": "\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u043f\u043e\u043b\u0435. \u041d\u0435 \u0431\u043e\u043b\u0435\u0435 150 \u0441\u0438\u043c\u0432\u043e\u043b\u043e\u0432. \u0422\u043e\u043b\u044c\u043a\u043e \u0431\u0443\u043a\u0432\u044b, \u0446\u0438\u0444\u0440\u044b \u0438 \u0441\u0438\u043c\u0432\u043e\u043b\u044b @/./+/-/_.",
                    "type": "string",
                    "pattern": "^[\\w.@+-]+$",
                    "maxLength": 150,
                    "minLength": 1
                },
                "is_active": {
                    "title": "Is active",
                    "type": "boolean",
                    "default": true
                },
                "is_staff": {
                    "title": "Is staff",
                    "type": "boolean",
                    "default": false
                },
                "first_name": {
                    "title": "\u0418\u043c\u044f",
                    "type": "string",
                    "maxLength": 150
                },
                "last_name": {
                    "title": "\u0424\u0430\u043c\u0438\u043b\u0438\u044f",
                    "type": "string",
                    "maxLength": 150
                },
                "email": {
                    "title": "Email",
                    "type": "string",
                    "format": "email",
                    "minLength": 1
                }
            },
            "x-properties-groups": {
                "": [
                    "id",
                    "username",
                    "is_active",
                    "is_staff",
                    "first_name",
                    "last_name",
                    "email"
                ]
            },
            "x-view-field-name": "username"
        },
        "_MainSettings": {
            "type": "object",
            "properties": {
                "language": {
                    "title": "Language",
                    "type": "string",
                    "enum": [
                        "en",
                        "ru",
                        "cn",
                        "vi"
                    ],
                    "default": "ru"
                },
                "dark_mode": {
                    "title": "Dark mode",
                    "type": "boolean",
                    "default": false
                }
            },
            "default": {
                "language": "ru",
                "dark_mode": false
            },
            "x-properties-groups": {
                "": [
                    "language",
                    "dark_mode"
                ]
            },
            "x-view-field-name": "dark_mode"
        },
        "_UserSettings": {
            "type": "object",
            "properties": {
                "main": {
                    "$ref": "#/definitions/_MainSettings"
                },
                "custom": {
                    "title": "Custom",
                    "type": "string",
                    "format": "json",
                    "default": {}
                }
            },
            "x-properties-groups": {
                "": [
                    "main",
                    "custom"
                ]
            },
            "x-view-field-name": "custom"
        },
        "ChangePassword": {
            "required": [
                "old_password",
                "password",
                "password2"
            ],
            "type": "object",
            "properties": {
                "old_password": {
                    "title": "Old password",
                    "type": "string",
                    "format": "password"
                },
                "password": {
                    "title": "New password",
                    "type": "string",
                    "format": "password"
                },
                "password2": {
                    "title": "Confirm new password",
                    "type": "string",
                    "format": "password"
                }
            },
            "x-properties-groups": {
                "": [
                    "old_password",
                    "password",
                    "password2"
                ]
            },
            "x-view-field-name": "password"
        },
        "TwoFA": {
            "type": "object",
            "properties": {
                "enabled": {
                    "title": "Enabled",
                    "type": "boolean",
                    "readOnly": true
                },
                "secret": {
                    "title": "Secret",
                    "type": "string",
                    "minLength": 1,
                    "x-nullable": true
                },
                "pin": {
                    "title": "Enter the six-digit code from the application",
                    "type": "string",
                    "minLength": 1
                },
                "recovery": {
                    "title": "Recovery",
                    "type": "string",
                    "minLength": 1
                }
            },
            "x-properties-groups": {
                "": [
                    "enabled",
                    "secret",
                    "pin",
                    "recovery"
                ]
            },
            "x-view-field-name": "secret"
        }
    }
}
