[uwsgi]
# enable threads if it not specified
if-not-opt = offload-threads
offload-threads = 2
endif =

# enable threads if it not specified
if-not-opt = enable-threads
enable-threads = true
endif =

# use master-mode if it not specified
if-not-opt = master
master = true
endif =

# number of workers
if-not-opt = processes
processes = %k
endif =

# number of threads per worker
if-not-opt = threads
threads = %k
endif =

# Enable static-gzip-all by default
if-not-opt = static-gzip-all=false
static-gzip-all = true
endif =

# PID-file for service
if-not-opt = pidfile
pidfile = /tmp/%(program_name)_web.pid
endif =

# Fix mime types
if-file = /etc/mime.types
mimefile = %(_)
endif =

# Add header with vstutils version
if-opt = vstutils_version
add-header = Vstutils-Version: %(_)
endif =

# Optimizations
if-not-opt = http-keepalive=false
print = Keep-Alive mode enabled
http-keepalive = true
add-header = Connection: Keep-Alive
endif =

if-not-opt = http-timeout=0
http-timeout = 60
endif =


if-opt = static_url
response-route-if = startswith:${PATH_INFO};%(_) last:
endif =

# Gzip responses
# Collect response types which should be gzipped
# if-not-opt = http-auto-gzip=false
# print = Gzip enabled.
# http-auto-gzip = true
; gzip only if the client support it
# response-route-if = contains:${HTTP_ACCEPT_ENCODING};gzip gzip:
# response-route-run = chunked:
# endif =

print = Run %(program_name) with module `%(module)` and lib `%(lib_name)`
