[tox]
envlist = flake,mypy,pylint,bandit,py310-django32-coverage,py36-django32-install,builddoc
skipsdist = True
whitelist_externals =
    rm
    bash
    yarn

[testenv]
passenv = *
changedir = test_src/
setenv =
    install: PYTHONPATH = ./:$PYTHONPATH
    coverage: PYTHONPATH = ../.:$PYTHONPATH
    COVRC = ../.coveragerc
    EXECUTE_ARGS = test_proj test -v 2 --failfast --parallel 4
    CCACHE_DIR = {envdir}/.ccache
    TEST_PROJ_LOG_LEVEL = DEBUG
    TEST_PROJ_DB_TYPE = mysql
    TEST_PROJ_DB_HOST = mysql
    TEST_PROJ_DB_NAME = mysql
    TEST_PROJ_DB_USER = mysql
    TEST_PROJ_DB_PASSWORD = mysql
    TEST_PROJ_MAIL_HOST = localhost
    TEST_PROJ_MAIL_PORT = 26
    TEST_PROJ_UWSGI_LISTEN = 121
    UWSGI_PROFILE = minimal
    django32: DJANGO_DEP =
    PYLINTHOME={envdir}/.pylint.d/

whitelist_externals =
    rm
    ls
    bash
    pwd
    yarn
commands =
    pip install -U pip~=21.2.2
    pip uninstall vstutils -y
    install: rm -rfv {envdir}/dist/
    install: python ../setup.py bdist_wheel --dist-dir {envdir}/dist/
    install: bash -c "export BUILD_COMPILE=true; pip install -U {envdir}/dist/$(ls {envdir}/dist)[all]"
    pwd
    install: python -m {env:EXECUTE_ARGS} {posargs}
    coverage: python ../setup.py install_egg_info
    coverage: pip install -U -e ..[all]
    coverage: coverage erase --rcfile={env:COVRC}
    coverage: coverage run --rcfile={env:COVRC} {env:EXECUTE_ARGS} {posargs}
    coverage: coverage combine --rcfile={env:COVRC}
    coverage: coverage report --rcfile={env:COVRC}
    install: pip uninstall vstutils -y
    rm -rf ../.eggs ../build ../vstutils.egg-info {envdir}/dist
deps =
    pip>=20.0.2
    wheel
    setuptools
    pysqlite3~=0.4.1
    install: jsmin~=3.0.0
    install: cython

[testenv:flake]
changedir = ./
deps =
    flake8==3.8.4
    flake8-bugbear==20.1.4
    flake8-commas==2.0.0
    flake8-comprehensions==3.3.0
    flake8-django==1.1.1
    flake8-executable==2.0.4
    flake8-functions==0.0.4
    flake8-import-order==0.18.1
    # flake8-docstrings
commands =
    flake8 --config=.pep8 vstutils

[testenv:bandit]
changedir = ./
deps =
    bandit==1.7.0
commands =
    bandit -r vstutils -c bandit.yaml

[testenv:mypy]
basepython = python3.6
changedir = ./
deps =
    mypy==0.812
commands =
    pip uninstall vstutils -y
    pip install -U -e .[stubs]
    mypy -p vstutils

[testenv:pylint]
basepython = python3.6
changedir = ./
deps =
    pylint==2.10.2
    pylint-django==2.4.3
    pylint-plugin-utils==0.6.0
    -rrequirements-git.txt
commands =
  pip install -U -e .[all]
  pylint --rcfile=./.pylintrc --django-settings-module=vstutils.settings {posargs} vstutils

[testenv:js_style]
changedir = ./
deps =
whitelist_externals = yarn
commands =
  yarn install
  yarn lint

[testenv:js_tests]
changedir = ./
deps =
whitelist_externals = yarn
commands =
  yarn install
  yarn test

[testenv:builddoc]
basepython = python3.7
changedir = ./doc/
whitelist_externals =
    make
setenv =
    DONT_YARN = true
    READTHEDOCS = true
commands =
    make html
deps =
    -rrequirements-rtd.txt

[testenv:build]
basepython = python3.6
passenv = *
changedir = .
whitelist_externals =
    tox
    rm
commands =
    rm -rf dist build
    tox -c tox_build.ini --workdir {envdir}
deps =

[testenv:contrib]
basepython = python3.6
skipsdist = False
usedevelop = True
envdir = {toxinidir}/env
setenv = CCACHE_DIR = {envdir}/.ccache
passenv = *
whitelist_externals = *
commands =
    python ../setup.py install_egg_info
    pip install -U -e ..[all]
deps =
   tox
